<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>_init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a39e1599ce157acc2dcbcd8747f870a2b</Anchor>
    <Abstract>Performs any initialization required by the ads adapter. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showBottomBanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a526610f0f5a5595280154895818c48de</Anchor>
    <Abstract>Shows a bottom banner ad. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showInterstitial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>ae4fe5a11d697083b53f50d9abcc3286e</Anchor>
    <Abstract>Shows an interstitial ad. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showTopBanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>acf80fb472cfaa9a3fee8b99789ee39a5</Anchor>
    <Abstract>Shows a top banner ad. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showVideoReward</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a89f8e4bc4d9c7d6b75f3d785ef1d3dab</Anchor>
    <Abstract>Shows a video reward ad. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a215ed26bf5eec68b43c10f46736dcff5</Anchor>
    <Abstract>Logs given event without additional attributes. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a2a21dbb3d98cdbd82528b541a9444c2e</Anchor>
    <Abstract>Logs given event with given additional attributes. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>acfd87b7acb85358f701824dd2aa9ba2d</Anchor>
    <Abstract>Logs given event with given additional attributes. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logLevelEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a128674e7c2ff4904a91e3a7cac8c9a9a</Anchor>
    <Abstract>Logs end of level with given name/identifier, given score, whether user succeeded or not in the level...</Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logLevelEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>ab498d61caeb1d3ec088c3c42271dd69c</Anchor>
    <Abstract>Logs end of level with given name/identifier, given score, whether user succeeded or not in the level...</Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logLevelStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a9e78b00c2896743d7d7f4a574ec13856</Anchor>
    <Abstract>Logs start of level with given name/identifier and given optional additional attributes. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logLevelStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a09eed2973e784da332a1d0e6093d649b</Anchor>
    <Abstract>Logs start of level with given name/identifier and given optional additional attributes. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logPerformance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a15ed005a81c1e96f744584cb4f5e5e34</Anchor>
    <Abstract>Logs frames per second. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ac25ce294014ce6a0f51795797e2539a3</Anchor>
    <Abstract>Inits native components of Game Kit. </Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reportAchievementProgress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a06ae068e5f9a83040b8d41ff3b29846a</Anchor>
    <Abstract>Reports given progress in achievement with given identifier, unlocking it if progress is ...</Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_requestAchievement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a39e7058c88be42770b272994ab24c8ef</Anchor>
    <Abstract>Requests player&amp;#39;s current progress on given achievement and calls given callback. ...</Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_requestFriendsScores</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a77147a74419d7b3ea3f2d4ab4b78a63b</Anchor>
    <Abstract>Requests current scores of current player&amp;#39;s friends in given leaderboard and calls given callback onc...</Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_requestScore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a8eb477843523f68c5c9f525bc90a7ccc</Anchor>
    <Abstract>Requests current score from given leaderboard and calls given callback once value is available...</Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showLeaderboard</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ad96ba928b8aa5b88577155caf2ff798b</Anchor>
    <Abstract>Opens leaderboards UI for given leaderboard. </Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_signInPlayer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a5da107e47390d3e64f88e82d7d994d4e</Anchor>
    <Abstract>Signs in player in Game Center. </Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_submitScore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a8e6f98b471f4f8ed1edb0a3834a2af14</Anchor>
    <Abstract>Submits given score to given leaderboard. </Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_buyButtonTitleForProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a773f26204d8a695ed1c9c2221db6823c</Anchor>
    <Abstract>Returns title of buy button for product with given identifier. </Abstract>
    <DeclaredIn>_IAPKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_buyIfPossible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>ad4cf30908b63ff36cf48fb6b44c45007</Anchor>
    <Abstract>Tries to buy given item, calling callback on finished. </Abstract>
    <DeclaredIn>_IAPKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a41b7f768a3e8c9154647f7fe6e07028f</Anchor>
    <Abstract>Inits In-App Purchase system, calling given callback on end. </Abstract>
    <DeclaredIn>_IAPKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_restorePurchases</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a0e3cf8ba54a5272086984dd30d13a4ac</Anchor>
    <Abstract>Restores any previously purchased item, calling given callback on end. </Abstract>
    <DeclaredIn>_IAPKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toFabric</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Log</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log.html</Path>
    <Anchor>a6d2108eb7cc881d7303292faba6cec84</Anchor>
    <Abstract>Logs message with given format and additional data to Fabric&amp;#39;s Crashlytics service. </Abstract>
    <DeclaredIn>_Log.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoolValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>a21bbb971037315d27a282fe09d58e943</Anchor>
    <Abstract>Returns bool value associated with given key. </Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFloatValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>ae75ce213328d4829bade52fa1298bbc3</Anchor>
    <Abstract>Returns float value associated with given key. </Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>a2bf7552af064c73ea6b50282681d19f8</Anchor>
    <Abstract>Returns long value associated with given key. </Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStringValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>a8d5e8e247325759eb2c97fb7c5df701e</Anchor>
    <Abstract>Returns string value associated with given key. </Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>afd3d3523193c664c29f23e4235e13c8d</Anchor>
    <Abstract>Initializes A/B database and calls given callback if this is the first time database has been initial...</Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a1abd645a384f31dc1421e82772cfb472</Anchor>
    <Abstract>Returns whether ads are enabled for this user or not. </Abstract>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>aab6fed949fb7e7a9052144367597b9cd</Anchor>
    <Abstract>Performs any initialization required by the ads adapter. </Abstract>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showBottomBanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>add9f76341cdf101a96a3871fa154a2c9</Anchor>
    <Abstract>Shows a bottom banner ad. </Abstract>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showInterstitial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a413ead0cc048a5cb2becc3a6e50ad59b</Anchor>
    <Abstract>Shows an interstitial ad. </Abstract>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showTopBanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a339aea64224b42fd0db628bb1ee87b94</Anchor>
    <Abstract>Shows a top banner ad. </Abstract>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showVideoReward</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>acafca58cb7a9d2d72bb1990586e506af</Anchor>
    <Abstract>Shows video reward ad. </Abstract>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ADMOB_DEATH_INTERSTITIAL_ID</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_android_2_ad_kit_8cpp.html</Path>
    <Anchor>ac4aa7ffc0045caf6d5907b51c1985c1b</Anchor>
    <Abstract>ID of Admob&amp;#39;s interstitial to show on death. </Abstract>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ADMOB_TEST_DEVICES</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_android_2_ad_kit_8cpp.html</Path>
    <Anchor>a0440997c0ad98d4fca14dfccbf473041</Anchor>
    <Abstract>Test devices where ads will be test ads. </Abstract>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a39e1599ce157acc2dcbcd8747f870a2b</Anchor>
    <Abstract>Performs any initialization required by the ads adapter. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_sessionEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>ac31c3a4e613ecbb143197e9340b60e23</Anchor>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_sessionStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a85c78af5fe0edb129256ba748b40a42c</Anchor>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showBottomBanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a526610f0f5a5595280154895818c48de</Anchor>
    <Abstract>Shows a bottom banner ad. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showInterstitial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>ae4fe5a11d697083b53f50d9abcc3286e</Anchor>
    <Abstract>Shows an interstitial ad. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showTopBanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>acf80fb472cfaa9a3fee8b99789ee39a5</Anchor>
    <Abstract>Shows a top banner ad. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showVideoReward</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a89f8e4bc4d9c7d6b75f3d785ef1d3dab</Anchor>
    <Abstract>Shows a video reward ad. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Java_org_cocos2dx_cpp_AppActivity_callCppRewardCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a3ec27cc7d527c70185740892a183e8cb</Anchor>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>videoRewardsAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a6bca88e69dd5dc1616d521b88eb953cc</Anchor>
    <Abstract>Returns whether this user has video rewards available or not. </Abstract>
    <DeclaredIn>AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rewardCallbacks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>abb6b3476585f740a5b10281a86dbe4f0</Anchor>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a1abd645a384f31dc1421e82772cfb472</Anchor>
    <Abstract>Returns whether ads are enabled for this user or not. </Abstract>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>aab6fed949fb7e7a9052144367597b9cd</Anchor>
    <Abstract>Performs any initialization required by the ads adapter. </Abstract>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showBottomBanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>add9f76341cdf101a96a3871fa154a2c9</Anchor>
    <Abstract>Shows a bottom banner ad. </Abstract>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showInterstitial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a413ead0cc048a5cb2becc3a6e50ad59b</Anchor>
    <Abstract>Shows an interstitial ad. </Abstract>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showTopBanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a339aea64224b42fd0db628bb1ee87b94</Anchor>
    <Abstract>Shows a top banner ad. </Abstract>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showVideoReward</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>acafca58cb7a9d2d72bb1990586e506af</Anchor>
    <Abstract>Shows video reward ad. </Abstract>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>videoRewardsAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a6bca88e69dd5dc1616d521b88eb953cc</Anchor>
    <Abstract>Returns whether this user has video rewards available or not. </Abstract>
    <DeclaredIn>AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a06ed59ccf83270d8c89455e41efde314</Anchor>
    <Abstract>Returns whether Analytics logging in enbled or not. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a7bb95c80f3280eb2e484571354d8c61e</Anchor>
    <Abstract>Logs given event without additional attributes. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a860c9b76af3732ddd17e2e68c4b0bb43</Anchor>
    <Abstract>Logs given event with given additional attributes. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a01dcc6d3d88695b0c593c82078f09355</Anchor>
    <Abstract>Logs given event with given additional attributes. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logLevelEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a701bdc0ffe82d1bcbb40c11b6a651d38</Anchor>
    <Abstract>Logs end of level with given name/identifier, given score, whether user succeeded or not in the level...</Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logLevelEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a31de0f2fdb4caa11bb2dd1adaa0b3b8c</Anchor>
    <Abstract>Logs end of level with given name/identifier, given score, whether user succeeded or not in the level...</Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logLevelStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a6a424cbc8852272d96422d998a017239</Anchor>
    <Abstract>Logs start of level with given name/identifier. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logLevelStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a06ce55b9a1ccb5a444c5a2d029b3918d</Anchor>
    <Abstract>Logs start of level with given name/identifier and given optional additional attributes. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logLevelStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a6921e8ffe35f95820888d3cf7167874b</Anchor>
    <Abstract>Logs start of level with given name/identifier and given optional additional attributes. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logNonReadyVideoRewardDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a45074f520084ef7dadcf189155705026</Anchor>
    <Abstract>Logs that app tried to display a video reward ad that was not ready yet. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logPerformance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>aa0c87e56fcb10763beffc8829a49e8db</Anchor>
    <Abstract>Logs frames per second. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a215ed26bf5eec68b43c10f46736dcff5</Anchor>
    <Abstract>Logs given event without additional attributes. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a2a21dbb3d98cdbd82528b541a9444c2e</Anchor>
    <Abstract>Logs given event with given additional attributes. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>acfd87b7acb85358f701824dd2aa9ba2d</Anchor>
    <Abstract>Logs given event with given additional attributes. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logLevelEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a128674e7c2ff4904a91e3a7cac8c9a9a</Anchor>
    <Abstract>Logs end of level with given name/identifier, given score, whether user succeeded or not in the level...</Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logLevelEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>ab498d61caeb1d3ec088c3c42271dd69c</Anchor>
    <Abstract>Logs end of level with given name/identifier, given score, whether user succeeded or not in the level...</Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logLevelStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a9e78b00c2896743d7d7f4a574ec13856</Anchor>
    <Abstract>Logs start of level with given name/identifier and given optional additional attributes. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logLevelStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a09eed2973e784da332a1d0e6093d649b</Anchor>
    <Abstract>Logs start of level with given name/identifier and given optional additional attributes. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a06ed59ccf83270d8c89455e41efde314</Anchor>
    <Abstract>Returns whether Analytics logging in enbled or not. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a7bb95c80f3280eb2e484571354d8c61e</Anchor>
    <Abstract>Logs given event without additional attributes. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a860c9b76af3732ddd17e2e68c4b0bb43</Anchor>
    <Abstract>Logs given event with given additional attributes. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a01dcc6d3d88695b0c593c82078f09355</Anchor>
    <Abstract>Logs given event with given additional attributes. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logLevelEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a701bdc0ffe82d1bcbb40c11b6a651d38</Anchor>
    <Abstract>Logs end of level with given name/identifier, given score, whether user succeeded or not in the level...</Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logLevelEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a31de0f2fdb4caa11bb2dd1adaa0b3b8c</Anchor>
    <Abstract>Logs end of level with given name/identifier, given score, whether user succeeded or not in the level...</Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logLevelStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a6a424cbc8852272d96422d998a017239</Anchor>
    <Abstract>Logs start of level with given name/identifier. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logLevelStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a06ce55b9a1ccb5a444c5a2d029b3918d</Anchor>
    <Abstract>Logs start of level with given name/identifier and given optional additional attributes. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logLevelStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a6921e8ffe35f95820888d3cf7167874b</Anchor>
    <Abstract>Logs start of level with given name/identifier and given optional additional attributes. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logNonReadyVideoRewardDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a45074f520084ef7dadcf189155705026</Anchor>
    <Abstract>Logs that app tried to display a video reward ad that was not ready yet. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CALLBACK_ID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Analytics::PerformanceIntensiveLogging</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics_1_1_performance_intensive_logging.html</Path>
    <Anchor>a59baa3c7ba76dceaaaaad3860c0b95cc</Anchor>
    <Abstract>Identifier of callback that logs FPS periodically. </Abstract>
    <DeclaredIn>Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PERIOD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Analytics::PerformanceIntensiveLogging</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics_1_1_performance_intensive_logging.html</Path>
    <Anchor>abc9bdf112aea01b11bfa6d172b478acf</Anchor>
    <Abstract>Period of intensive performance logging in seconds, that is, seconds to wait between two consecutive ...</Abstract>
    <DeclaredIn>Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROBABILITY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Analytics::PerformanceIntensiveLogging</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics_1_1_performance_intensive_logging.html</Path>
    <Anchor>abbacfcb270c18a0ba326edcf7e628052</Anchor>
    <Abstract>Probability (up to 1) of an invocation to Fabric::maybeScheduleIntensivePerformanceLogging to schedul...</Abstract>
    <DeclaredIn>Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentPlatform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a7c83a89bef610abaa7ada09d38c2f3fb</Anchor>
    <Abstract>Returns current platform. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasPowerfulHardware</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a3df17973cee66e7dbaad474f93e2a544</Anchor>
    <Abstract>Returns whether this device has powerful hardware or not. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pxScreenSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a15ac13199dceddf6370f09acf2a192ad</Anchor>
    <Abstract>Retuns this device&amp;#39;s screen size, in pixel. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>screenSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a3afd74ae8409bd7e0267b5141e15197f</Anchor>
    <Abstract>Retuns this device&amp;#39;s screen size, in points. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UUID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a7f05d5d0e1b292c8fd29bdea674fcfe3</Anchor>
    <Abstract>Returns UUID of this device. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a05451548c58d28d4914a31207819ecda</Anchor>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ac25ce294014ce6a0f51795797e2539a3</Anchor>
    <Abstract>Inits native components of Game Kit. </Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reportAchievementProgress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a06ae068e5f9a83040b8d41ff3b29846a</Anchor>
    <Abstract>Reports given progress in achievement with given identifier, unlocking it if progress is ...</Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_requestAchievement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a39e7058c88be42770b272994ab24c8ef</Anchor>
    <Abstract>Requests player&amp;#39;s current progress on given achievement and calls given callback. ...</Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_requestFriendsScores</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a77147a74419d7b3ea3f2d4ab4b78a63b</Anchor>
    <Abstract>Requests current scores of current player&amp;#39;s friends in given leaderboard and calls given callback onc...</Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_requestScore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a8eb477843523f68c5c9f525bc90a7ccc</Anchor>
    <Abstract>Requests current score from given leaderboard and calls given callback once value is available...</Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showLeaderboard</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ad96ba928b8aa5b88577155caf2ff798b</Anchor>
    <Abstract>Opens leaderboards UI for given leaderboard. </Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_signInPlayer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a5da107e47390d3e64f88e82d7d994d4e</Anchor>
    <Abstract>Signs in player in Game Center. </Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_submitScore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a8e6f98b471f4f8ed1edb0a3834a2af14</Anchor>
    <Abstract>Submits given score to given leaderboard. </Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitGame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>acb91d71c0aaeea2b40e49ccca5473a65</Anchor>
    <Abstract>Closes the game. </Abstract>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ad65cc8a24b47cbb094481c7d0e50d505</Anchor>
    <Abstract>On Android returns whether Google Play Games is available (true) or not. </Abstract>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Java_org_cocos2dx_cpp_AppActivity_callCppAchievementCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>aeea3e0c832dd9d93302d16f38b76c64e</Anchor>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Java_org_cocos2dx_cpp_AppActivity_callCppFriendScoreCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a148ebf1481b3aa5094f533f07b62395c</Anchor>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Java_org_cocos2dx_cpp_AppActivity_callCppScoreCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>abb3b0052dac094d7e492bb0cbb1a1e8b</Anchor>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showAchievementsList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ac126d7aa77f9fe6062bba62b8b0ce583</Anchor>
    <Abstract>Shows achievements list screen. </Abstract>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>achievementCallbacks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a92839d6799d1b9175b1b29f2c87e5d20</Anchor>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>friendScoreCallbacks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a72cb836ffa8db4cd7757876d20232112</Anchor>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scoreCallbacks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a0f5d763fc204ebb60074a97b61105aa4</Anchor>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Java_org_cocos2dx_cpp_AppActivity_callCppPurchasesCallback</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>___i_a_p_kit_8cpp.html</Path>
    <Anchor>a7f86d0f13644c98e90ec2118aa3ddf56</Anchor>
    <DeclaredIn>_IAPKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>purchaseCallbacks</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>___i_a_p_kit_8cpp.html</Path>
    <Anchor>ad11556211905e7acce83fc5f2fe9d2e5</Anchor>
    <DeclaredIn>_IAPKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toFabric</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Log</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log.html</Path>
    <Anchor>a6d2108eb7cc881d7303292faba6cec84</Anchor>
    <Abstract>Logs message with given format and additional data to Fabric&amp;#39;s Crashlytics service. </Abstract>
    <DeclaredIn>_Log.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoolValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>a21bbb971037315d27a282fe09d58e943</Anchor>
    <Abstract>Returns bool value associated with given key. </Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFloatValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>ae75ce213328d4829bade52fa1298bbc3</Anchor>
    <Abstract>Returns float value associated with given key. </Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>a2bf7552af064c73ea6b50282681d19f8</Anchor>
    <Abstract>Returns long value associated with given key. </Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStringValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>a8d5e8e247325759eb2c97fb7c5df701e</Anchor>
    <Abstract>Returns string value associated with given key. </Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>afd3d3523193c664c29f23e4235e13c8d</Anchor>
    <Abstract>Initializes A/B database and calls given callback if this is the first time database has been initial...</Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>round</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std</Scope>
    </TokenIdentifier>
    <Path>namespacestd.html</Path>
    <Anchor>a9d10306b742df34337582691a6f0c74f</Anchor>
    <DeclaredIn>CompilerEnhancements.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>to_string</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std</Scope>
    </TokenIdentifier>
    <Path>namespacestd.html</Path>
    <Anchor>ad028a2646c9302d478995256bdbd9459</Anchor>
    <DeclaredIn>CompilerEnhancements.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>APP_ACTIVITY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Android</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_android.html</Path>
    <Anchor>ad2711c1f63953648d9307f9431eeee64</Anchor>
    <DeclaredIn>Constants.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendInvitation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Facebook</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_facebook.html</Path>
    <Anchor>adf541520a341f9be2d806bc5cdf92a12</Anchor>
    <Abstract>Shows Facebook invite modal view controller with given link and thumbnail URL. </Abstract>
    <DeclaredIn>Facebook.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forcedWriteDisk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a184cb17593fdfc77739423fded151e71</Anchor>
    <Abstract>Forces writing KVDatabase changes to disk. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a767b41659c2ee79a635285b4ae078aa7</Anchor>
    <Abstract>Returns long value associated with given key. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStringValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a10910fd1eab506db078b7a690eed3e50</Anchor>
    <Abstract>Returns string value associated with given key. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a8c40584219ca43eb9a2e65f14e328816</Anchor>
    <Abstract>Sets long value for given key. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStringValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a740bf14feb1b251255d768398eb53652</Anchor>
    <Abstract>Sets string value for given key. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storedKeys</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a43f6653c44b92bc3a2e3968fc56caa30</Anchor>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decreaseLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>ad79c7c1255ddfb778041afba1f47e903</Anchor>
    <Abstract>Decreases long value for given key by given amount. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>increaseLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>aa67a4972fe3adb6041b9da4cab53841f</Anchor>
    <Abstract>Increases long value for given key by given amount. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a6da2d946a5bd04c69d15b60834673712</Anchor>
    <Abstract>Initializes key-value database and calls given callback if this is the first time database has been i...</Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>keepMaxLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>aa3230cc40fb3f67eeebc7c388825ee81</Anchor>
    <Abstract>Keeps maximum long value between current long value and given value. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>keepMinLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>ae2bf5047196dcd947b56e680bbe53a1b</Anchor>
    <Abstract>Keeps minimum long value between current long value and given value. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeApplyingBinaryOperationAndReturningPreviousValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a4058098a441fb6e62605317242ebb54a</Anchor>
    <Abstract>Sets given key in database to the result of applying given binary operation to previous value (defaul...</Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a215ed26bf5eec68b43c10f46736dcff5</Anchor>
    <Abstract>Logs given event without additional attributes. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a2a21dbb3d98cdbd82528b541a9444c2e</Anchor>
    <Abstract>Logs given event with given additional attributes. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>acfd87b7acb85358f701824dd2aa9ba2d</Anchor>
    <Abstract>Logs given event with given additional attributes. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logLevelEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a128674e7c2ff4904a91e3a7cac8c9a9a</Anchor>
    <Abstract>Logs end of level with given name/identifier, given score, whether user succeeded or not in the level...</Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logLevelEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>ab498d61caeb1d3ec088c3c42271dd69c</Anchor>
    <Abstract>Logs end of level with given name/identifier, given score, whether user succeeded or not in the level...</Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logLevelStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a9e78b00c2896743d7d7f4a574ec13856</Anchor>
    <Abstract>Logs start of level with given name/identifier and given optional additional attributes. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logLevelStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a09eed2973e784da332a1d0e6093d649b</Anchor>
    <Abstract>Logs start of level with given name/identifier and given optional additional attributes. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HexToNSData</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_p_p_utils_8h.html</Path>
    <Anchor>a454603a4e70231351c60f4c95b2107d1</Anchor>
    <Abstract>Returns NSData with bytes represented by given hexadecimal NSString. </Abstract>
    <DeclaredIn>CPPUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itoh</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_p_p_utils_8h.html</Path>
    <Anchor>a691499df31ae544646f68e2b6b75ee16</Anchor>
    <Abstract>Returns hexadecimal representation of given integer. </Abstract>
    <DeclaredIn>CPPUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSDataToHex</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_p_p_utils_8h.html</Path>
    <Anchor>afdab0150d60cda7674034a9e4e4dd484</Anchor>
    <Abstract>Returns NSString with hexadecimal representation of given NSData. </Abstract>
    <DeclaredIn>CPPUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>to_nsarray</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_p_p_utils_8h.html</Path>
    <Anchor>a86a3c923fc6c24186808cb0ace126710</Anchor>
    <Abstract>Returns a NSArray equivalent to given std::vector of strings. </Abstract>
    <DeclaredIn>CPPUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>to_nsdictionary</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_p_p_utils_8h.html</Path>
    <Anchor>ab5f38d8a1d927d74d4b03e7798cfac0b</Anchor>
    <Abstract>Returns a NSDictionary equivalent to given std::map of strings. </Abstract>
    <DeclaredIn>CPPUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>to_nsdictionary</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_p_p_utils_8h.html</Path>
    <Anchor>ae10eda69bf8ff5b4f55b441f0e02a323</Anchor>
    <Abstract>Returns a NSDictionary equivalent to given std::map of key strings and double values. </Abstract>
    <DeclaredIn>CPPUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>to_nsdictionary</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_p_p_utils_8h.html</Path>
    <Anchor>adece6e42d96785891d0b1d4397000a15</Anchor>
    <Abstract>Returns a NSDictionary equivalent to given std::map of key strings and long long values. </Abstract>
    <DeclaredIn>CPPUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>to_nsdictionary</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_p_p_utils_8h.html</Path>
    <Anchor>a253b381d982b1accac0b33873eb48272</Anchor>
    <Abstract>Returns a NSDictionary equivalent to given std::map of key strings and bool values. </Abstract>
    <DeclaredIn>CPPUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>to_nsstring</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_p_p_utils_8h.html</Path>
    <Anchor>a35815dc6b4ba20ddb20e4a27f0b82294</Anchor>
    <Abstract>Returns a NSString equivalent to given std::string. </Abstract>
    <DeclaredIn>CPPUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HexToNSData</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_p_p_utils_8mm.html</Path>
    <Anchor>a454603a4e70231351c60f4c95b2107d1</Anchor>
    <Abstract>Returns NSData with bytes represented by given hexadecimal NSString. </Abstract>
    <DeclaredIn>CPPUtils.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itoh</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_p_p_utils_8mm.html</Path>
    <Anchor>a691499df31ae544646f68e2b6b75ee16</Anchor>
    <DeclaredIn>CPPUtils.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSDataToHex</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_p_p_utils_8mm.html</Path>
    <Anchor>afdab0150d60cda7674034a9e4e4dd484</Anchor>
    <Abstract>Returns NSString with hexadecimal representation of given NSData. </Abstract>
    <DeclaredIn>CPPUtils.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>to_nsarray</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_p_p_utils_8mm.html</Path>
    <Anchor>a86a3c923fc6c24186808cb0ace126710</Anchor>
    <Abstract>Returns a NSArray equivalent to given std::vector of strings. </Abstract>
    <DeclaredIn>CPPUtils.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>to_nsdictionary</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_p_p_utils_8mm.html</Path>
    <Anchor>ab5f38d8a1d927d74d4b03e7798cfac0b</Anchor>
    <Abstract>Returns a NSDictionary equivalent to given std::map of strings. </Abstract>
    <DeclaredIn>CPPUtils.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>to_nsdictionary</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_p_p_utils_8mm.html</Path>
    <Anchor>ae10eda69bf8ff5b4f55b441f0e02a323</Anchor>
    <Abstract>Returns a NSDictionary equivalent to given std::map of key strings and double values. </Abstract>
    <DeclaredIn>CPPUtils.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>to_nsdictionary</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_p_p_utils_8mm.html</Path>
    <Anchor>adece6e42d96785891d0b1d4397000a15</Anchor>
    <Abstract>Returns a NSDictionary equivalent to given std::map of key strings and long long values. </Abstract>
    <DeclaredIn>CPPUtils.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>to_nsdictionary</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_p_p_utils_8mm.html</Path>
    <Anchor>a253b381d982b1accac0b33873eb48272</Anchor>
    <Abstract>Returns a NSDictionary equivalent to given std::map of key strings and bool values. </Abstract>
    <DeclaredIn>CPPUtils.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>to_nsstring</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_p_p_utils_8mm.html</Path>
    <Anchor>a35815dc6b4ba20ddb20e4a27f0b82294</Anchor>
    <Abstract>Returns a NSString equivalent to given std::string. </Abstract>
    <DeclaredIn>CPPUtils.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInternetAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a233e40252b58638d854b1c025d4679b5</Anchor>
    <Abstract>Returns whether internet is currently available or not. </Abstract>
    <DeclaredIn>Device.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingCellularData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>adea9816bb8ff16e566c3dcef21f91cbb</Anchor>
    <Abstract>Returns whether internet is currently reachable via cellular data or not. </Abstract>
    <DeclaredIn>Device.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingWifi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>ae25a42cc38e44dda3299a65171802375</Anchor>
    <Abstract>Returns whether internet is currently reachable via Wifi or not. </Abstract>
    <DeclaredIn>Device.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>language</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a7e658aa5071ef7e0ae034f1266061997</Anchor>
    <Abstract>Returns this device&amp;#39;s language code. </Abstract>
    <DeclaredIn>Device.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentPlatform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a7c83a89bef610abaa7ada09d38c2f3fb</Anchor>
    <Abstract>Returns current platform. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasPowerfulHardware</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a3df17973cee66e7dbaad474f93e2a544</Anchor>
    <Abstract>Returns whether this device has powerful hardware or not. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pxScreenSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a15ac13199dceddf6370f09acf2a192ad</Anchor>
    <Abstract>Retuns this device&amp;#39;s screen size, in pixel. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>screenSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a3afd74ae8409bd7e0267b5141e15197f</Anchor>
    <Abstract>Retuns this device&amp;#39;s screen size, in points. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UUID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a7f05d5d0e1b292c8fd29bdea674fcfe3</Anchor>
    <Abstract>Returns UUID of this device. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy_mac_address</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_o_s_01_x_2_device_8mm.html</Path>
    <Anchor>ae92bd57965d1e7252665aad1916433fd</Anchor>
    <DeclaredIn>Device.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentPlatform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a7c83a89bef610abaa7ada09d38c2f3fb</Anchor>
    <Abstract>Returns current platform. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasPowerfulHardware</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a3df17973cee66e7dbaad474f93e2a544</Anchor>
    <Abstract>Returns whether this device has powerful hardware or not. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pxScreenSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a15ac13199dceddf6370f09acf2a192ad</Anchor>
    <Abstract>Retuns this device&amp;#39;s screen size, in pixel. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>screenSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a3afd74ae8409bd7e0267b5141e15197f</Anchor>
    <Abstract>Retuns this device&amp;#39;s screen size, in points. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UUID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a7f05d5d0e1b292c8fd29bdea674fcfe3</Anchor>
    <Abstract>Returns UUID of this device. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>achievements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>aaad725ab871bd20357566b4cf03ab743</Anchor>
    <Abstract>List of achievements. </Abstract>
    <DeclaredIn>GameKit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentLoginState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>aedace782bcf456dbd9881a26fbeee36b</Anchor>
    <Abstract>Current login state. </Abstract>
    <DeclaredIn>GameKit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leaderboards</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a5c8017532e926f8819977dd8b590aed0</Anchor>
    <Abstract>List of leaderboards. </Abstract>
    <DeclaredIn>GameKit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ac25ce294014ce6a0f51795797e2539a3</Anchor>
    <Abstract>Inits native components of Game Kit. </Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reportAchievementProgress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a06ae068e5f9a83040b8d41ff3b29846a</Anchor>
    <Abstract>Reports given progress in achievement with given identifier, unlocking it if progress is ...</Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_requestAchievement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a39e7058c88be42770b272994ab24c8ef</Anchor>
    <Abstract>Requests player&amp;#39;s current progress on given achievement and calls given callback. ...</Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_requestFriendsScores</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a77147a74419d7b3ea3f2d4ab4b78a63b</Anchor>
    <Abstract>Requests current scores of current player&amp;#39;s friends in given leaderboard and calls given callback onc...</Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_requestScore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a8eb477843523f68c5c9f525bc90a7ccc</Anchor>
    <Abstract>Requests current score from given leaderboard and calls given callback once value is available...</Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_submitScore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a8e6f98b471f4f8ed1edb0a3834a2af14</Anchor>
    <Abstract>Submits given score to given leaderboard. </Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitGame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>acb91d71c0aaeea2b40e49ccca5473a65</Anchor>
    <Abstract>Closes the game. </Abstract>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ad65cc8a24b47cbb094481c7d0e50d505</Anchor>
    <Abstract>On Android returns whether Google Play Games is available (true) or not. </Abstract>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showLeaderboard</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ad96ba928b8aa5b88577155caf2ff798b</Anchor>
    <Abstract>Opens leaderboards UI for given leaderboard. </Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_signInPlayer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a5da107e47390d3e64f88e82d7d994d4e</Anchor>
    <Abstract>Signs in player in Game Center. </Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showAchievementsList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ac126d7aa77f9fe6062bba62b8b0ce583</Anchor>
    <Abstract>Shows achievements list screen. </Abstract>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gameCenterDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>i_o_s_2_game_kit_8mm.html</Path>
    <Anchor>aeaa0a6ba6398341fa2d8ada59f563954</Anchor>
    <DeclaredIn>GameKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showLeaderboard</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ad96ba928b8aa5b88577155caf2ff798b</Anchor>
    <Abstract>Opens leaderboards UI for given leaderboard. </Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_signInPlayer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a5da107e47390d3e64f88e82d7d994d4e</Anchor>
    <Abstract>Signs in player in Game Center. </Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showAchievementsList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ac126d7aa77f9fe6062bba62b8b0ce583</Anchor>
    <Abstract>Shows achievements list screen. </Abstract>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gameCenterDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_o_s_01_x_2_game_kit_8mm.html</Path>
    <Anchor>aeaa0a6ba6398341fa2d8ada59f563954</Anchor>
    <DeclaredIn>GameKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>voidManagerBoolLambda</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>_i_a_p_kit_8mm.html</Path>
    <Anchor>ab9fd657b31820cb49b7693b361a3d551</Anchor>
    <DeclaredIn>IAPKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>voidManagerLambda</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>_i_a_p_kit_8mm.html</Path>
    <Anchor>ac4ee4ddfc4991238f7d9b84c7c44b0bf</Anchor>
    <DeclaredIn>IAPKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_buyButtonTitleForProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a773f26204d8a695ed1c9c2221db6823c</Anchor>
    <Abstract>Returns title of buy button for product with given identifier. </Abstract>
    <DeclaredIn>_IAPKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_buyIfPossible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>ad4cf30908b63ff36cf48fb6b44c45007</Anchor>
    <Abstract>Tries to buy given item, calling callback on finished. </Abstract>
    <DeclaredIn>_IAPKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a41b7f768a3e8c9154647f7fe6e07028f</Anchor>
    <Abstract>Inits In-App Purchase system, calling given callback on end. </Abstract>
    <DeclaredIn>_IAPKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_restorePurchases</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a0e3cf8ba54a5272086984dd30d13a4ac</Anchor>
    <Abstract>Restores any previously purchased item, calling given callback on end. </Abstract>
    <DeclaredIn>_IAPKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>productMetadataHasBeenRetrievedFromStore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a99962d8cc37e6db5b77b955653c661ce</Anchor>
    <Abstract>Returns whether given product has been found on store and can be bought or not. </Abstract>
    <DeclaredIn>IAPKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeManager</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_i_a_p_kit_8mm.html</Path>
    <Anchor>aa4c5e7e0309ba3a8f3d5eee4ba3de42d</Anchor>
    <DeclaredIn>IAPKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SECRET_KEY</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_k_v_database_8mm.html</Path>
    <Anchor>a4d92a40fdc4aa951886dbe12b710fb5f</Anchor>
    <Abstract>Key used to cypher database. </Abstract>
    <DeclaredIn>KVDatabase.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forcedWriteDisk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a184cb17593fdfc77739423fded151e71</Anchor>
    <Abstract>Forces writing KVDatabase changes to disk. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a767b41659c2ee79a635285b4ae078aa7</Anchor>
    <Abstract>Returns long value associated with given key. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStringValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a10910fd1eab506db078b7a690eed3e50</Anchor>
    <Abstract>Returns string value associated with given key. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>ac2a23838089c49a655dc2c50b56bc470</Anchor>
    <Abstract>Return whether given key is in database or not. </Abstract>
    <DeclaredIn>KVDatabase.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a8c40584219ca43eb9a2e65f14e328816</Anchor>
    <Abstract>Sets long value for given key. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStringValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a740bf14feb1b251255d768398eb53652</Anchor>
    <Abstract>Sets string value for given key. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>db</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>ad41cf27a2953adf76090f41288cc3b95</Anchor>
    <DeclaredIn>KVDatabase.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toFabric</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Log</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log.html</Path>
    <Anchor>a6d2108eb7cc881d7303292faba6cec84</Anchor>
    <Abstract>Logs message with given format and additional data to Fabric&amp;#39;s Crashlytics service. </Abstract>
    <DeclaredIn>_Log.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoolValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>a21bbb971037315d27a282fe09d58e943</Anchor>
    <Abstract>Returns bool value associated with given key. </Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFloatValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>ae75ce213328d4829bade52fa1298bbc3</Anchor>
    <Abstract>Returns float value associated with given key. </Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>a2bf7552af064c73ea6b50282681d19f8</Anchor>
    <Abstract>Returns long value associated with given key. </Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStringValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>a8d5e8e247325759eb2c97fb7c5df701e</Anchor>
    <Abstract>Returns string value associated with given key. </Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>afd3d3523193c664c29f23e4235e13c8d</Anchor>
    <Abstract>Initializes A/B database and calls given callback if this is the first time database has been initial...</Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoolValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>a21bbb971037315d27a282fe09d58e943</Anchor>
    <Abstract>Returns bool value associated with given key. </Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFloatValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>ae75ce213328d4829bade52fa1298bbc3</Anchor>
    <Abstract>Returns float value associated with given key. </Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>a2bf7552af064c73ea6b50282681d19f8</Anchor>
    <Abstract>Returns long value associated with given key. </Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStringValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>a8d5e8e247325759eb2c97fb7c5df701e</Anchor>
    <Abstract>Returns string value associated with given key. </Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>afd3d3523193c664c29f23e4235e13c8d</Anchor>
    <Abstract>Initializes A/B database and calls given callback if this is the first time database has been initial...</Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a39e1599ce157acc2dcbcd8747f870a2b</Anchor>
    <Abstract>Performs any initialization required by the ads adapter. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showBottomBanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a526610f0f5a5595280154895818c48de</Anchor>
    <Abstract>Shows a bottom banner ad. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showInterstitial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>ae4fe5a11d697083b53f50d9abcc3286e</Anchor>
    <Abstract>Shows an interstitial ad. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showTopBanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>acf80fb472cfaa9a3fee8b99789ee39a5</Anchor>
    <Abstract>Shows a top banner ad. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showVideoReward</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a89f8e4bc4d9c7d6b75f3d785ef1d3dab</Anchor>
    <Abstract>Shows a video reward ad. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>videoRewardsAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a6bca88e69dd5dc1616d521b88eb953cc</Anchor>
    <Abstract>Returns whether this user has video rewards available or not. </Abstract>
    <DeclaredIn>AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>banners</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>i_o_s_2_ad_kit_8mm.html</Path>
    <Anchor>a620eeae5447d9ad30d6975f986f91397</Anchor>
    <DeclaredIn>AdKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegates</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>i_o_s_2_ad_kit_8mm.html</Path>
    <Anchor>a0c08066a16f84b2f0e303e9b0dcf12ab</Anchor>
    <DeclaredIn>AdKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interstitials</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>i_o_s_2_ad_kit_8mm.html</Path>
    <Anchor>ae490b8566b10813816ad918b52a3c7a7</Anchor>
    <DeclaredIn>AdKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a39e1599ce157acc2dcbcd8747f870a2b</Anchor>
    <Abstract>Performs any initialization required by the ads adapter. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showBottomBanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a526610f0f5a5595280154895818c48de</Anchor>
    <Abstract>Shows a bottom banner ad. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showInterstitial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>ae4fe5a11d697083b53f50d9abcc3286e</Anchor>
    <Abstract>Shows an interstitial ad. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showTopBanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>acf80fb472cfaa9a3fee8b99789ee39a5</Anchor>
    <Abstract>Shows a top banner ad. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showVideoReward</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a89f8e4bc4d9c7d6b75f3d785ef1d3dab</Anchor>
    <Abstract>Shows a video reward ad. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>videoRewardsAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a6bca88e69dd5dc1616d521b88eb953cc</Anchor>
    <Abstract>Returns whether this user has video rewards available or not. </Abstract>
    <DeclaredIn>AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Facebook</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_facebook.html</Path>
    <Anchor>a07fd01d1fa7c7902e1bc17718f2f669e</Anchor>
    <Abstract>Returns whether Facebook integration is enabled or not. </Abstract>
    <DeclaredIn>Facebook.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendInvitation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Facebook</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_facebook.html</Path>
    <Anchor>adf541520a341f9be2d806bc5cdf92a12</Anchor>
    <Abstract>Shows Facebook invite modal view controller with given link and thumbnail URL. </Abstract>
    <DeclaredIn>Facebook.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendInvitation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Facebook</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_facebook.html</Path>
    <Anchor>adf541520a341f9be2d806bc5cdf92a12</Anchor>
    <Abstract>Shows Facebook invite modal view controller with given link and thumbnail URL. </Abstract>
    <DeclaredIn>Facebook.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>symmetricDecrypt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::CryptoKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_crypto_kit.html</Path>
    <Anchor>a203d82d45948bf0ce0371afa7c3c8aa1</Anchor>
    <Abstract>Returns given encrypted content decrypted. </Abstract>
    <DeclaredIn>CryptoKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>symmetricEncrypt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::CryptoKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_crypto_kit.html</Path>
    <Anchor>a5558ed3cf6f0752f849ac7904209467b</Anchor>
    <Abstract>Returns given content encrypted. </Abstract>
    <DeclaredIn>CryptoKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>symmetricDecrypt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::CryptoKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_crypto_kit.html</Path>
    <Anchor>a203d82d45948bf0ce0371afa7c3c8aa1</Anchor>
    <Abstract>Returns given encrypted content decrypted. </Abstract>
    <DeclaredIn>CryptoKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>symmetricEncrypt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::CryptoKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_crypto_kit.html</Path>
    <Anchor>a5558ed3cf6f0752f849ac7904209467b</Anchor>
    <Abstract>Returns given content encrypted. </Abstract>
    <DeclaredIn>CryptoKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Self</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>MK</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k.html</Path>
    <Anchor>aef55e92c44e859e8eab8817ae93f60c2</Anchor>
    <DeclaredIn>Date.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAndroid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a2ca977d6dbd8da9b026e083bbb99f60f</Anchor>
    <Abstract>Returns whether this device is running Android or not. </Abstract>
    <DeclaredIn>Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isiOS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>ab96584a6fbd06cbfea91ac7f11722682</Anchor>
    <Abstract>Returns whether this device is running iOS or not. </Abstract>
    <DeclaredIn>Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOSX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a983d07fad256fb9e289b985cb4237efa</Anchor>
    <Abstract>Returns whether this device is running OS X or not. </Abstract>
    <DeclaredIn>Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentPlatform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a7c83a89bef610abaa7ada09d38c2f3fb</Anchor>
    <Abstract>Returns current platform. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasPowerfulHardware</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a3df17973cee66e7dbaad474f93e2a544</Anchor>
    <Abstract>Returns whether this device has powerful hardware or not. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAndroid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a2ca977d6dbd8da9b026e083bbb99f60f</Anchor>
    <Abstract>Returns whether this device is running Android or not. </Abstract>
    <DeclaredIn>Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInternetAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a233e40252b58638d854b1c025d4679b5</Anchor>
    <Abstract>Returns whether internet is currently available or not. </Abstract>
    <DeclaredIn>Device.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isiOS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>ab96584a6fbd06cbfea91ac7f11722682</Anchor>
    <Abstract>Returns whether this device is running iOS or not. </Abstract>
    <DeclaredIn>Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOSX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a983d07fad256fb9e289b985cb4237efa</Anchor>
    <Abstract>Returns whether this device is running OS X or not. </Abstract>
    <DeclaredIn>Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingCellularData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>adea9816bb8ff16e566c3dcef21f91cbb</Anchor>
    <Abstract>Returns whether internet is currently reachable via cellular data or not. </Abstract>
    <DeclaredIn>Device.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingWifi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>ae25a42cc38e44dda3299a65171802375</Anchor>
    <Abstract>Returns whether internet is currently reachable via Wifi or not. </Abstract>
    <DeclaredIn>Device.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>language</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a7e658aa5071ef7e0ae034f1266061997</Anchor>
    <Abstract>Returns this device&amp;#39;s language code. </Abstract>
    <DeclaredIn>Device.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pxScreenSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a15ac13199dceddf6370f09acf2a192ad</Anchor>
    <Abstract>Retuns this device&amp;#39;s screen size, in pixel. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>screenSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a3afd74ae8409bd7e0267b5141e15197f</Anchor>
    <Abstract>Retuns this device&amp;#39;s screen size, in points. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UUID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a7f05d5d0e1b292c8fd29bdea674fcfe3</Anchor>
    <Abstract>Returns UUID of this device. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>productGlobalIDForProductLocalID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>ab11c5800bf0812d1afe75bb65caf2817</Anchor>
    <Abstract>Returns string identifier (global ID) of given in-app purchase. </Abstract>
    <DeclaredIn>MKUtils.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>productLocalIDForProductGlobalID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a9d7e0aebe4a7c86838b52deb38aa3d9d</Anchor>
    <Abstract>Returns enum class item (local ID) of in-app purchase with given string identifier (global ID)...</Abstract>
    <DeclaredIn>MKUtils.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unlockProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a46680ce03df4993f7c6fa87861333de4</Anchor>
    <DeclaredIn>MKUtils.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Facebook</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_facebook.html</Path>
    <Anchor>a07fd01d1fa7c7902e1bc17718f2f669e</Anchor>
    <Abstract>Returns whether Facebook integration is enabled or not. </Abstract>
    <DeclaredIn>Facebook.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendInvitation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Facebook</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_facebook.html</Path>
    <Anchor>adf541520a341f9be2d806bc5cdf92a12</Anchor>
    <Abstract>Shows Facebook invite modal view controller with given link and thumbnail URL. </Abstract>
    <DeclaredIn>Facebook.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdKit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Features</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_features.html</Path>
    <Anchor>a24e0be6525d51b648c6cad84900cfb29</Anchor>
    <Abstract>Whether Ads are enabled (true) or not. </Abstract>
    <DeclaredIn>Features.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Analytics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Features</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_features.html</Path>
    <Anchor>af9716bfabd384f08af7e204141c5ad14</Anchor>
    <Abstract>Whether Analytics is enabled (true) or not. </Abstract>
    <DeclaredIn>Features.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Facebook</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Features</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_features.html</Path>
    <Anchor>a0594c69baff814c1140fcceed7e55fdf</Anchor>
    <Abstract>Whether Facebook integration is enabled (true) or not. </Abstract>
    <DeclaredIn>Features.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GameKitAchievements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Features</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_features.html</Path>
    <Anchor>abc1e32d7ceefb956e224b1c919104087</Anchor>
    <Abstract>Whether GameKit&amp;#39;s achievements are enabled (true) or not. </Abstract>
    <DeclaredIn>Features.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GameKitLeaderboards</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Features</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_features.html</Path>
    <Anchor>a25dad15ca4f410b7da45716196111c4e</Anchor>
    <Abstract>Whether GameKit&amp;#39;s leaderboards are enabled (true) or not. </Abstract>
    <DeclaredIn>Features.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IAPKit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Features</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_features.html</Path>
    <Anchor>a7d2d7f81654c250d232afa72df4a45e3</Anchor>
    <Abstract>Whether in-app purchases are enabled (true) or not. </Abstract>
    <DeclaredIn>Features.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ad8bb7cc5219105704e517efe7c4ebbf1</Anchor>
    <Abstract>Type of callbacks called after finishing an asynchronous request. </Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportAchievementProgress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>aee2952bf011186c68e66864476fdb8d5</Anchor>
    <Abstract>Reports achievement with given identifier and progress, unlocking it if progress is ...</Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestAchievement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a8d4665fd03e95f8f60b2d7a124a4ed50</Anchor>
    <Abstract>Requests player&amp;#39;s current progress on given achievement and calls given callback. ...</Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestFriendsScores</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a48ec5944178bf6e347b0d12fe09d848a</Anchor>
    <Abstract>Requests current scores of current player&amp;#39;s friends in given leaderboard and calls given callback onc...</Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestScore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>aff3a621501cd3f240e05f87eeaafcab3</Anchor>
    <Abstract>Requests current score from given leaderboard and calls given callback once value is available...</Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showLeaderboard</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>aa5f34ea29b641200cab24dc8c4f7c88d</Anchor>
    <Abstract>Opens leaderboards UI for given leaderboard. </Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submitScore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ab1f27a99206f11007f883d6d0f6ac50f</Anchor>
    <Abstract>Submits given score to given leaderboard. </Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitGame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>acb91d71c0aaeea2b40e49ccca5473a65</Anchor>
    <Abstract>Closes the game. </Abstract>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ad8bb7cc5219105704e517efe7c4ebbf1</Anchor>
    <Abstract>Type of callbacks called after finishing an asynchronous request. </Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ad65cc8a24b47cbb094481c7d0e50d505</Anchor>
    <Abstract>On Android returns whether Google Play Games is available (true) or not. </Abstract>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportAchievementProgress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>aee2952bf011186c68e66864476fdb8d5</Anchor>
    <Abstract>Reports achievement with given identifier and progress, unlocking it if progress is ...</Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestAchievement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a8d4665fd03e95f8f60b2d7a124a4ed50</Anchor>
    <Abstract>Requests player&amp;#39;s current progress on given achievement and calls given callback. ...</Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestFriendsScores</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a48ec5944178bf6e347b0d12fe09d848a</Anchor>
    <Abstract>Requests current scores of current player&amp;#39;s friends in given leaderboard and calls given callback onc...</Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestScore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>aff3a621501cd3f240e05f87eeaafcab3</Anchor>
    <Abstract>Requests current score from given leaderboard and calls given callback once value is available...</Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showAchievementsList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ac126d7aa77f9fe6062bba62b8b0ce583</Anchor>
    <Abstract>Shows achievements list screen. </Abstract>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showLeaderboard</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>aa5f34ea29b641200cab24dc8c4f7c88d</Anchor>
    <Abstract>Opens leaderboards UI for given leaderboard. </Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submitScore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ab1f27a99206f11007f883d6d0f6ac50f</Anchor>
    <Abstract>Submits given score to given leaderboard. </Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buyButtonTitleForProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a1f52a6b60dd3e544ea0ef1d7a75625cb</Anchor>
    <Abstract>Returns title of buy button for product with given identifier. </Abstract>
    <DeclaredIn>IAPKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buyIfPossible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a244b106e812be9028b3c9c23f9f51752</Anchor>
    <Abstract>Tries to buy given item, calling callback on finished. </Abstract>
    <DeclaredIn>IAPKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>aaaf94652bf53567cfedcd0ef482858f8</Anchor>
    <Abstract>Returns whether IAPKit is enabled or not. </Abstract>
    <DeclaredIn>IAPKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>af53bbaf9538db755f6028fe26232cdd2</Anchor>
    <Abstract>Inits In-App Purchase system, calling given callback on end. </Abstract>
    <DeclaredIn>IAPKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>restorePurchases</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>acd01af28d13abce09a6591b16733d419</Anchor>
    <Abstract>Restores any previously purchased item, calling given callback on end. </Abstract>
    <DeclaredIn>IAPKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buyButtonTitleForProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a1f52a6b60dd3e544ea0ef1d7a75625cb</Anchor>
    <Abstract>Returns title of buy button for product with given identifier. </Abstract>
    <DeclaredIn>IAPKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buyIfPossible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a244b106e812be9028b3c9c23f9f51752</Anchor>
    <Abstract>Tries to buy given item, calling callback on finished. </Abstract>
    <DeclaredIn>IAPKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>aaaf94652bf53567cfedcd0ef482858f8</Anchor>
    <Abstract>Returns whether IAPKit is enabled or not. </Abstract>
    <DeclaredIn>IAPKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>af53bbaf9538db755f6028fe26232cdd2</Anchor>
    <Abstract>Inits In-App Purchase system, calling given callback on end. </Abstract>
    <DeclaredIn>IAPKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>productGlobalIDForProductLocalID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>ab11c5800bf0812d1afe75bb65caf2817</Anchor>
    <Abstract>Returns string identifier (global ID) of given in-app purchase. </Abstract>
    <DeclaredIn>MKUtils.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>productLocalIDForProductGlobalID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a9d7e0aebe4a7c86838b52deb38aa3d9d</Anchor>
    <Abstract>Returns enum class item (local ID) of in-app purchase with given string identifier (global ID)...</Abstract>
    <DeclaredIn>MKUtils.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>productMetadataHasBeenRetrievedFromStore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a99962d8cc37e6db5b77b955653c661ce</Anchor>
    <Abstract>Returns whether given product has been found on store and can be bought or not. </Abstract>
    <DeclaredIn>IAPKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>restorePurchases</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>acd01af28d13abce09a6591b16733d419</Anchor>
    <Abstract>Restores any previously purchased item, calling given callback on end. </Abstract>
    <DeclaredIn>IAPKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unlockProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a46680ce03df4993f7c6fa87861333de4</Anchor>
    <DeclaredIn>MKUtils.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateLayerCallbackFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k.html</Path>
    <Anchor>a3772ffcdd72ad96d7ff3ce6704f10a14</Anchor>
    <DeclaredIn>InfiniteParallaxNode.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decreaseLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>ad79c7c1255ddfb778041afba1f47e903</Anchor>
    <Abstract>Decreases long value for given key by given amount. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forcedWriteDisk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a184cb17593fdfc77739423fded151e71</Anchor>
    <Abstract>Forces writing KVDatabase changes to disk. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a767b41659c2ee79a635285b4ae078aa7</Anchor>
    <Abstract>Returns long value associated with given key. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStringValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a10910fd1eab506db078b7a690eed3e50</Anchor>
    <Abstract>Returns string value associated with given key. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>increaseLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>aa67a4972fe3adb6041b9da4cab53841f</Anchor>
    <Abstract>Increases long value for given key by given amount. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a6da2d946a5bd04c69d15b60834673712</Anchor>
    <Abstract>Initializes key-value database and calls given callback if this is the first time database has been i...</Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>keepMaxLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>aa3230cc40fb3f67eeebc7c388825ee81</Anchor>
    <Abstract>Keeps maximum long value between current long value and given value. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>keepMinLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>ae2bf5047196dcd947b56e680bbe53a1b</Anchor>
    <Abstract>Keeps minimum long value between current long value and given value. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a8c40584219ca43eb9a2e65f14e328816</Anchor>
    <Abstract>Sets long value for given key. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStringValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a740bf14feb1b251255d768398eb53652</Anchor>
    <Abstract>Sets string value for given key. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ADS_DISABLED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::KVDatabase::Key</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database_1_1_key.html</Path>
    <Anchor>a476d15ce81b1c419a47d273bda4d09a4</Anchor>
    <Abstract>Key used to store whether ads are disabled or not. </Abstract>
    <DeclaredIn>KVDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LONG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::KVDatabase::Default</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database_1_1_default.html</Path>
    <Anchor>afb2bbaa0b04f7a8aa760e2666dca3691</Anchor>
    <Abstract>Default value returned when long does not exist. </Abstract>
    <DeclaredIn>KVDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STRING</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::KVDatabase::Default</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database_1_1_default.html</Path>
    <Anchor>aa56f2c8e31c1d8b42bd50520a5329972</Anchor>
    <Abstract>Default value returned when string does not exist. </Abstract>
    <DeclaredIn>KVDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>debug</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Log</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log.html</Path>
    <Anchor>a3e84a309c158873fecff57e1db770c9a</Anchor>
    <Abstract>Logs a debug message that will not appear also in release builds. </Abstract>
    <DeclaredIn>Log.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nonCriticalCrash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Log</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log.html</Path>
    <Anchor>aaad0a85a2c31c679940f009469a1cabc</Anchor>
    <Abstract>Logs a non critical message that will appear also in release builds and will also be logged to Fabric...</Abstract>
    <DeclaredIn>Log.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>warning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Log</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log.html</Path>
    <Anchor>a370b710e345cbc5eb6c2a4f27aeb504f</Anchor>
    <Abstract>Logs a warning message that will appear also in release builds. </Abstract>
    <DeclaredIn>Log.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>critical</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Log</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log.html</Path>
    <Anchor>a71c5fa2bd12a3879b004f1e0eafa01e4</Anchor>
    <Abstract>Logs a critical message that will appear also in release builds and will also be logged to Fabric...</Abstract>
    <DeclaredIn>Log.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>debug</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Log</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log.html</Path>
    <Anchor>a3e84a309c158873fecff57e1db770c9a</Anchor>
    <Abstract>Logs a debug message that will not appear also in release builds. </Abstract>
    <DeclaredIn>Log.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nonCriticalCrash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Log</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log.html</Path>
    <Anchor>aaad0a85a2c31c679940f009469a1cabc</Anchor>
    <Abstract>Logs a non critical message that will appear also in release builds and will also be logged to Fabric...</Abstract>
    <DeclaredIn>Log.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>warning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Log</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log.html</Path>
    <Anchor>a370b710e345cbc5eb6c2a4f27aeb504f</Anchor>
    <Abstract>Logs a warning message that will appear also in release builds. </Abstract>
    <DeclaredIn>Log.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>METHOD_NOT_AVAILABLE_ON_ANDROID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Log::ErrorMessageFormat</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log_1_1_error_message_format.html</Path>
    <Anchor>a95ea76ec91ce447a68f2f25ec490a044</Anchor>
    <Abstract>Message logged when a iOS/OS X only method is called on Android. </Abstract>
    <DeclaredIn>Log.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>METHOD_NOT_AVAILABLE_ON_OSX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Log::ErrorMessageFormat</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log_1_1_error_message_format.html</Path>
    <Anchor>acf0b18c0fe4bf8f796478232959ec139</Anchor>
    <Abstract>Message logged when a method not available on OS X is called on OS X. </Abstract>
    <DeclaredIn>Log.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Math</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_math.html</Path>
    <Anchor>a4b46a8d5a1a0647d02f24d8d7ca4738b</Anchor>
    <Abstract>Returns value clamped so it is bigger or equal to given minimum and lower or equal to given maximum...</Abstract>
    <DeclaredIn>Math.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Choose</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Random</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_random.html</Path>
    <Anchor>ad740002c0d1a5619cd9fd5d70072b48e</Anchor>
    <Abstract>Returns a random iterator between given start and end iterators, using given generator g to compute r...</Abstract>
    <DeclaredIn>Random.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Choose</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Random</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_random.html</Path>
    <Anchor>a4aa74a26805a007ae94e6b9a1dbf0454</Anchor>
    <Abstract>Returns a random iterator between given start and end iterators, using uniform probability. </Abstract>
    <DeclaredIn>Random.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Choose</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Random</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_random.html</Path>
    <Anchor>a08f89f40ac601a274bf6bd4ca93eae36</Anchor>
    <Abstract>Returns a random value in given vector. </Abstract>
    <DeclaredIn>Random.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FloatingPointNumberInRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Random</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_random.html</Path>
    <Anchor>ad4804d0b9d54e1632585daa62dcffd67</Anchor>
    <Abstract>Returns a floating point number in range . </Abstract>
    <DeclaredIn>Random.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IntegerNumberInRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Random</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_random.html</Path>
    <Anchor>a09e131693e09800cf64e901e4cf50af5</Anchor>
    <Abstract>Returns an integer number in closed range . </Abstract>
    <DeclaredIn>Random.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TakeChance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Random</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_random.html</Path>
    <Anchor>a241f791f42c63cb45ff07af74a4483ad</Anchor>
    <Abstract>Given a probability (floating point number between zero and one, both included) returns a random bool...</Abstract>
    <DeclaredIn>Random.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>MK</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k.html</Path>
    <Anchor>a4b18bd7a2cbf389060b9ba4d02fe7266</Anchor>
    <Abstract>Range of double values. </Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LLRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>MK</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k.html</Path>
    <Anchor>a739014558307635fb07da06165a1e369</Anchor>
    <Abstract>Range of long long values. </Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>MK</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k.html</Path>
    <Anchor>abbbdbc07f03a3d15bda5e7e3ca395cfb</Anchor>
    <Abstract>Range of short values. </Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md_Readme</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>md_Readme.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BannerViewDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>BannerViewDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_banner_view_delegate.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithAdUnitID:forSize:andTestDevices:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>BannerViewDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_banner_view_delegate.html</Path>
    <Anchor>aed6905a6da0f311df234de88f2b0eff2</Anchor>
    <DeclaredIn>AdKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GADAdSizeForMKBannerSize:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>BannerViewDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_banner_view_delegate.html</Path>
    <Anchor>a51cc9a48ca1271ea549de3cec7aae936</Anchor>
    <DeclaredIn>AdKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adUnitId</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>BannerViewDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_banner_view_delegate.html</Path>
    <Anchor>a9d578c86e13b98e360435a5e8dfb9702</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>BannerViewDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_banner_view_delegate.html</Path>
    <Anchor>a901b720ec6124f614562edc591048130</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testDevices</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>BannerViewDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_banner_view_delegate.html</Path>
    <Anchor>a1d681cc461b4894fe5f34134364820c3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GADMAdapterAdColonyExtras</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>GADMAdapterAdColonyExtras</Scope>
    </TokenIdentifier>
    <Path>interface_g_a_d_m_adapter_ad_colony_extras.html</Path>
    <DeclaredIn>GADMAdapterAdColonyExtras.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithZone:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>GADMAdapterAdColonyExtras</Scope>
    </TokenIdentifier>
    <Path>interface_g_a_d_m_adapter_ad_colony_extras.html</Path>
    <Anchor>a54cf6aef057b4e976a29ae88289daa30</Anchor>
    <DeclaredIn>GADMAdapterAdColonyExtras.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentZone</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>GADMAdapterAdColonyExtras</Scope>
    </TokenIdentifier>
    <Path>interface_g_a_d_m_adapter_ad_colony_extras.html</Path>
    <Anchor>a5b5093057a59162627abac2a415ad25c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GADMAdapterAdColonyInitializer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>GADMAdapterAdColonyInitializer</Scope>
    </TokenIdentifier>
    <Path>interface_g_a_d_m_adapter_ad_colony_initializer.html</Path>
    <DeclaredIn>GADMAdapterAdColonyInitializer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startWithAppID:andZones:andCustomID:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>GADMAdapterAdColonyInitializer</Scope>
    </TokenIdentifier>
    <Path>interface_g_a_d_m_adapter_ad_colony_initializer.html</Path>
    <Anchor>a3471826bd99c32de69ccbe369eb12d4b</Anchor>
    <DeclaredIn>GADMAdapterAdColonyInitializer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GCDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>GCDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_g_c_delegate.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InterstitialDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>InterstitialDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_interstitial_delegate.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithAdUnitID:andTestDevices:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>InterstitialDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_interstitial_delegate.html</Path>
    <Anchor>a841b17bc8431635cbe95837074cac1e5</Anchor>
    <DeclaredIn>AdKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestNewInterstitial</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>InterstitialDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_interstitial_delegate.html</Path>
    <Anchor>a2d4080d549db37a30e88c4356597ad1c</Anchor>
    <DeclaredIn>AdKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adUnitId</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>InterstitialDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_interstitial_delegate.html</Path>
    <Anchor>a1a5d0f795f2544ea0879018611ed6bd7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>testDevices</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>InterstitialDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_interstitial_delegate.html</Path>
    <Anchor>aa131ec0d5b57d6f99e716297a7457166</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReceiptValidator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ReceiptValidator</Scope>
    </TokenIdentifier>
    <Path>interface_receipt_validator.html</Path>
    <DeclaredIn>ReceiptValidator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>appReceiptIsValidForBundleID:andVersion:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>ReceiptValidator</Scope>
    </TokenIdentifier>
    <Path>interface_receipt_validator.html</Path>
    <Anchor>a820c68148ab2fedccc43588f8d79dea6</Anchor>
    <DeclaredIn>ReceiptValidator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiptAtURL:isValidForBundleID:andVersion:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>ReceiptValidator</Scope>
    </TokenIdentifier>
    <Path>interface_receipt_validator.html</Path>
    <Anchor>ab2df585c981dfc992ad4fe8fa09de347</Anchor>
    <DeclaredIn>ReceiptValidator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>validateAppReceiptForBundleID:andVersion:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>ReceiptValidator</Scope>
    </TokenIdentifier>
    <Path>interface_receipt_validator.html</Path>
    <Anchor>ad0d049250b9d647db64a8eba79683c68</Anchor>
    <DeclaredIn>ReceiptValidator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RewardVideoDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>RewardVideoDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_reward_video_delegate.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithAdUnitID:andCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>RewardVideoDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_reward_video_delegate.html</Path>
    <Anchor>a5d8713e80adf05ec03e68072d573ad06</Anchor>
    <DeclaredIn>AdKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestNewRewardVideo</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>RewardVideoDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_reward_video_delegate.html</Path>
    <Anchor>a0bfa3f23795d0ad8cedcb3c7601b9305</Anchor>
    <DeclaredIn>AdKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adUnitId</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>RewardVideoDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_reward_video_delegate.html</Path>
    <Anchor>ad4699cf69bc042b2a458e81905c142ec</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>callback</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>RewardVideoDelegate</Scope>
    </TokenIdentifier>
    <Path>interface_reward_video_delegate.html</Path>
    <Anchor>a5846e61317c0c55e5aae091a58d33083</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StoreManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>StoreManager</Scope>
    </TokenIdentifier>
    <Path>interface_store_manager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addCallback:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>StoreManager</Scope>
    </TokenIdentifier>
    <Path>interface_store_manager.html</Path>
    <Anchor>a7e0884d1dd3e29a28f0dc34fe59bdc9f</Anchor>
    <Abstract>Adds given callback to the list of callbacks to be called when this manager is ready. </Abstract>
    <DeclaredIn>IAPKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buyProductWithIdentifier:callingOnEnd:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>StoreManager</Scope>
    </TokenIdentifier>
    <Path>interface_store_manager.html</Path>
    <Anchor>ae29fb430ba1264c7f344fe9382eda397</Anchor>
    <Abstract>Tries to buy product with given identifier, calling given callback on end. </Abstract>
    <DeclaredIn>IAPKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>productWithIdentifier:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>StoreManager</Scope>
    </TokenIdentifier>
    <Path>interface_store_manager.html</Path>
    <Anchor>a9217556712f18f66db1eb4c1a66618f1</Anchor>
    <Abstract>Returns product with given identifier. </Abstract>
    <DeclaredIn>IAPKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>restorePurchasesCallingOnEnd:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>StoreManager</Scope>
    </TokenIdentifier>
    <Path>interface_store_manager.html</Path>
    <Anchor>afab42b984528334f748844bb9aac43f3</Anchor>
    <Abstract>Tries to restore purchased items calling given callback on end. </Abstract>
    <DeclaredIn>IAPKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onBuyCallback</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>StoreManager</Scope>
    </TokenIdentifier>
    <Path>interface_store_manager.html</Path>
    <Anchor>afc76107037432758d6780bbd13e89525</Anchor>
    <Abstract>Callback to be called after a purchase. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pendingCallbacks</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>StoreManager</Scope>
    </TokenIdentifier>
    <Path>interface_store_manager.html</Path>
    <Anchor>a58953734e728472a691a806b53343014</Anchor>
    <Abstract>Callbacks to be called when request finishes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>products</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>StoreManager</Scope>
    </TokenIdentifier>
    <Path>interface_store_manager.html</Path>
    <Anchor>a07b5f9daea1f6067833bf8ee2394cc6c</Anchor>
    <Abstract>List of available products, indexed by ID. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>purchasePending</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>StoreManager</Scope>
    </TokenIdentifier>
    <Path>interface_store_manager.html</Path>
    <Anchor>aa3eaecb4903c14ea8ed1f48491fc498f</Anchor>
    <Abstract>Whether this store manager has a pending purchase or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ready</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>StoreManager</Scope>
    </TokenIdentifier>
    <Path>interface_store_manager.html</Path>
    <Anchor>a91f1db13bac3af1cdcdc8f16aa55d564</Anchor>
    <Abstract>Whether this store manager is ready (remote request finished) or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>request</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>StoreManager</Scope>
    </TokenIdentifier>
    <Path>interface_store_manager.html</Path>
    <Anchor>ae1708924f5685f7a1591ef3a3037b314</Anchor>
    <Abstract>Request managed by this manager. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k.html</Path>
    <Abstract>MK namespace is MawKit namespace. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>MK</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k.html</Path>
    <Anchor>a4b18bd7a2cbf389060b9ba4d02fe7266</Anchor>
    <Abstract>Range of double values. </Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LLRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>MK</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k.html</Path>
    <Anchor>a739014558307635fb07da06165a1e369</Anchor>
    <Abstract>Range of long long values. </Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Self</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>MK</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k.html</Path>
    <Anchor>aef55e92c44e859e8eab8817ae93f60c2</Anchor>
    <DeclaredIn>Date.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>MK</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k.html</Path>
    <Anchor>abbbdbc07f03a3d15bda5e7e3ca395cfb</Anchor>
    <Abstract>Range of short values. </Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateLayerCallbackFormat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k.html</Path>
    <Anchor>a3772ffcdd72ad96d7ff3ce6704f10a14</Anchor>
    <DeclaredIn>InfiniteParallaxNode.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::Date</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Abstract>Date class is a wrapper for day-precision dates. </Abstract>
    <DeclaredIn>Date.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Date</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>ae6536982c961e35d8dea066de75465a7</Anchor>
    <Abstract>Returns a new date object given its UNIX timestamp. </Abstract>
    <DeclaredIn>Date.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Date</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a392a7bfa767e87e85662be5c442e0849</Anchor>
    <Abstract>Returns a new date object for given day, month and year. </Abstract>
    <DeclaredIn>Date.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a6efa30494ef383a9bb14159b4f27a7e5</Anchor>
    <Abstract>Returns day component of this date. </Abstract>
    <DeclaredIn>Date.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMonth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>ac149eed214274faf33b42e564793a021</Anchor>
    <Abstract>Returns month component of this date. </Abstract>
    <DeclaredIn>Date.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a7b65db1686d4226423c186167aaef566</Anchor>
    <Abstract>Returns UNIX timestamp for given date. </Abstract>
    <DeclaredIn>Date.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getYear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a4b09b7cb08efeeab9f1b145352998ce1</Anchor>
    <Abstract>Returns year component of this date. </Abstract>
    <DeclaredIn>Date.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>ab911a645043ca3d8ac618c814ba1fbaa</Anchor>
    <Abstract>Returns whether left hand side happened before right hand side. </Abstract>
    <DeclaredIn>Date.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>abae5f9789ad8e581773a86c078b03718</Anchor>
    <Abstract>Returns whether given dates are equal or not. </Abstract>
    <DeclaredIn>Date.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChristmasEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a8c6bcc1013cb9c1b7046bfa95354222d</Anchor>
    <Abstract>Returns the last day of Christmas of this year. </Abstract>
    <DeclaredIn>Date.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ChristmasStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a406a0a909df8ece0fd4bc5ccf16d7dde</Anchor>
    <Abstract>Returns the first day of Christmas of this year. </Abstract>
    <DeclaredIn>Date.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EasterEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a4bf5961f75daea4053c9624e2dce838a</Anchor>
    <Abstract>Returns the last day of Easter of this year. </Abstract>
    <DeclaredIn>Date.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EasterStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a635b89179d1c821045ebfdd3a5389dd6</Anchor>
    <Abstract>Returns the first day of Easter of this year. </Abstract>
    <DeclaredIn>Date.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Today</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>ae9cb38bc92d6915fdfb9014fac32dd89</Anchor>
    <Abstract>Returns today&amp;#39;s date. </Abstract>
    <DeclaredIn>Date.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unixTimestamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a2c3794a6b05105377d80e3076bc0b9dd</Anchor>
    <Abstract>Timestamp of this date. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>January</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a67fa327f838085d1027c8f409bbd159ba86f5978d9b80124f509bdb71786e929e</Anchor>
    <Abstract>January. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>February</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a67fa327f838085d1027c8f409bbd159ba659e59f062c75f81259d22786d6c44aa</Anchor>
    <Abstract>February. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>March</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a67fa327f838085d1027c8f409bbd159bafa3e5edac607a88d8fd7ecb9d6d67424</Anchor>
    <Abstract>March. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>April</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a67fa327f838085d1027c8f409bbd159ba3fcf026bbfffb63fb24b8de9d0446949</Anchor>
    <Abstract>April. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>May</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a67fa327f838085d1027c8f409bbd159ba195fbb57ffe7449796d23466085ce6d8</Anchor>
    <Abstract>May. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>June</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a67fa327f838085d1027c8f409bbd159ba688937ccaf2a2b0c45a1c9bbba09698d</Anchor>
    <Abstract>June. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>July</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a67fa327f838085d1027c8f409bbd159ba1b539f6f34e8503c97f6d3421346b63c</Anchor>
    <Abstract>July. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>August</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a67fa327f838085d1027c8f409bbd159ba41ba70891fb6f39327d8ccb9b1dafb84</Anchor>
    <Abstract>August. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>September</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a67fa327f838085d1027c8f409bbd159bacc5d90569e1c8313c2b1c2aab1401174</Anchor>
    <Abstract>September. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>October</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a67fa327f838085d1027c8f409bbd159baeca60ae8611369fe28a02e2ab8c5d12e</Anchor>
    <Abstract>October. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>November</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a67fa327f838085d1027c8f409bbd159ba7e823b37564da492ca1629b4732289a8</Anchor>
    <Abstract>November. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>December</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::Date</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_date.html</Path>
    <Anchor>a67fa327f838085d1027c8f409bbd159ba82331503174acbae012b2004f6431fa5</Anchor>
    <Abstract>December. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::InfiniteParallaxNode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MK::InfiniteParallaxNode</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_infinite_parallax_node.html</Path>
    <DeclaredIn>InfiniteParallaxNode.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addLayer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::InfiniteParallaxNode</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_infinite_parallax_node.html</Path>
    <Anchor>a7c47d224cffde014287842b0b4d57e6a</Anchor>
    <Abstract>Adds given node to this parallax hierarchy. </Abstract>
    <DeclaredIn>InfiniteParallaxNode.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CREATE_FUNC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::InfiniteParallaxNode</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_infinite_parallax_node.html</Path>
    <Anchor>aa2e30d77643ba7454d37ced91f981ba1</Anchor>
    <DeclaredIn>InfiniteParallaxNode.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::Range</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>MK::Range</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_range.html</Path>
    <Abstract>A range defines a mathematical closed range starting at a value a and ending at a value b...</Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Range</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_range.html</Path>
    <Anchor>a2a963425bda3d2542dde7e4a82d2bfc5</Anchor>
    <Abstract>Returns given value clamped to this range. </Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Range</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_range.html</Path>
    <Anchor>a627e6473f7d6e9494ad47ad23f7972fc</Anchor>
    <Abstract>Returns whether given value is contained in this range or not, mathematically speaking returns whethe...</Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doubleRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Range</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_range.html</Path>
    <Anchor>ad9497ca3d989eb1ac7f8fb61b0b09f1b</Anchor>
    <Abstract>Returns a new Range of double values starting and ending at the same values as this Range...</Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>first</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Range</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_range.html</Path>
    <Anchor>a4a9c283160741dc8094b0de20f5f506c</Anchor>
    <Abstract>Returns first value contained in this range. </Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>last</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Range</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_range.html</Path>
    <Anchor>ab748d94649f53d6475ac4b7ecbc64756</Anchor>
    <Abstract>Returns last value contained in this range. </Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Range</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_range.html</Path>
    <Anchor>a4dd11d580ec425cad636048fb74fb83d</Anchor>
    <Abstract>Returns the length of this range, that is, the amount of integer values such that  holds...</Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>longRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Range</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_range.html</Path>
    <Anchor>a5ee7e2ef7ff75013f770e4cd4969ab7b</Anchor>
    <Abstract>Returns a new Range of long long values. </Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Range</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_range.html</Path>
    <Anchor>a3300c30dc590bc4b38a0bee1fd87edff</Anchor>
    <Abstract>Returns whether this range&amp;#39;s first value is lower than given range&amp;#39;s first value. ...</Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Range</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_range.html</Path>
    <Anchor>a6954ced84b7511d0cbef2f01ef1cf314</Anchor>
    <Abstract>Returns whether this range is equal to given range. </Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&gt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Range</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_range.html</Path>
    <Anchor>a188a376c7aac01a6a61f3ccc80eeb5f6</Anchor>
    <Abstract>Returns whether this range&amp;#39;s last value is grater than given range&amp;#39;s last value. </Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Range</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_range.html</Path>
    <Anchor>a485df96bb25a1cdf2a7174d13b756670</Anchor>
    <Abstract>Returns whether given value is contained in this range or not, mathematically speaking returns whethe...</Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>randomFloatingPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Range</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_range.html</Path>
    <Anchor>ad463f8b059e07cec16262700d69664fe</Anchor>
    <Abstract>Returns a random value contained in this range, that is, a random value such that  holds...</Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>randomInteger</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Range</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_range.html</Path>
    <Anchor>a7ea5d49113bdf63dc652e32f74bc07dc</Anchor>
    <Abstract>Returns a random integer value contained in this range, that is, a random value such that  holds...</Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Range</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Range</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_range.html</Path>
    <Anchor>a494517fc7fb923f7432d31854fc22ea2</Anchor>
    <Abstract>Creates a new range starting a start and ending at end, with both values included. </Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Range</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Range</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_range.html</Path>
    <Anchor>a0977464cb78958c8a29f7fc413de28c0</Anchor>
    <Abstract>Creates a new range starting at x value and ending at y value of given cocos2d::Vec2. </Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RangeFromStartWithLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>MK::Range</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_range.html</Path>
    <Anchor>a3f00a4712f84b0e0a1920ff2254d9db5</Anchor>
    <Abstract>Returns a new range starting at start and containing elements integer elements, that is...</Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RangeWithLengthUpToEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>MK::Range</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_range.html</Path>
    <Anchor>a51414c2ab3be2482d3fdfcbc13855706</Anchor>
    <Abstract>Returns a new range ending containing elements integer elements and ending at end, that is, starting at end - elements + 1. </Abstract>
    <DeclaredIn>Range.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>firstElement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Range</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_range.html</Path>
    <Anchor>adcd2be97257cb7c89d6555bf191dea22</Anchor>
    <Abstract>First element of this range. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastElement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Range</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_range.html</Path>
    <Anchor>a4b81356236ac86de958a5726c15c5779</Anchor>
    <Abstract>Last element of this range. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::ABDatabase</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Abstract>ABDatabase namespace offers a read-only key-value storage system backed by MixPanel&amp;#39;s AB test utiliti...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoolValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>a21bbb971037315d27a282fe09d58e943</Anchor>
    <Abstract>Returns bool value associated with given key. </Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFloatValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>ae75ce213328d4829bade52fa1298bbc3</Anchor>
    <Abstract>Returns float value associated with given key. </Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>a2bf7552af064c73ea6b50282681d19f8</Anchor>
    <Abstract>Returns long value associated with given key. </Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStringValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>a8d5e8e247325759eb2c97fb7c5df701e</Anchor>
    <Abstract>Returns string value associated with given key. </Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::ABDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database.html</Path>
    <Anchor>afd3d3523193c664c29f23e4235e13c8d</Anchor>
    <Abstract>Initializes A/B database and calls given callback if this is the first time database has been initial...</Abstract>
    <DeclaredIn>ABDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::ABDatabase::Key</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK::ABDatabase::Key</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_a_b_database_1_1_key.html</Path>
    <Abstract>Well known ABDatabase keys. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::Actions</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK::Actions</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_actions.html</Path>
    <Abstract>Actions namespace offers useful extra FiniteTimeActions. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::Actions::LinealShake</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MK::Actions::LinealShake</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_lineal_shake.html</Path>
    <Abstract>LinealShake action shakes a node during a certain delay in one axis. </Abstract>
    <DeclaredIn>FiniteTimeActions.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>MK::Actions::LinealShake</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_lineal_shake.html</Path>
    <Anchor>acf6b3af09ef2e694bdb63ea005c61629</Anchor>
    <Abstract>Creates a lineal shake action with given duration and strength (maximum movement allowed in given axi...</Abstract>
    <DeclaredIn>FiniteTimeActions.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::Actions::MoveToNode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MK::Actions::MoveToNode</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_move_to_node.html</Path>
    <Abstract>MoveToNode action moves a node from its original location to the location of given node...</Abstract>
    <DeclaredIn>FiniteTimeActions.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Actions::MoveToNode</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_move_to_node.html</Path>
    <Anchor>a7307b7ed79ad427b23bca22bf490d8dd</Anchor>
    <DeclaredIn>FiniteTimeActions.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Actions::MoveToNode</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_move_to_node.html</Path>
    <Anchor>aad477ad644b02fe577b5b1775896d49d</Anchor>
    <Abstract>Initializes the action with given duration. </Abstract>
    <DeclaredIn>FiniteTimeActions.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Actions::MoveToNode</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_move_to_node.html</Path>
    <Anchor>a5aa556743f95fa8d8b3df6549e7258e7</Anchor>
    <DeclaredIn>FiniteTimeActions.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startWithTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Actions::MoveToNode</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_move_to_node.html</Path>
    <Anchor>ae664132be0b6cc6efd5eac77a59e4239</Anchor>
    <DeclaredIn>FiniteTimeActions.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Actions::MoveToNode</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_move_to_node.html</Path>
    <Anchor>a3ed24fe48a3e70574d3c8d1d04e65bc5</Anchor>
    <DeclaredIn>FiniteTimeActions.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MoveToNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Actions::MoveToNode</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_move_to_node.html</Path>
    <Anchor>a95f4e17ea1f8c5a05e3a0477e0a06415</Anchor>
    <DeclaredIn>FiniteTimeActions.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>MK::Actions::MoveToNode</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_move_to_node.html</Path>
    <Anchor>aaa39f3e6bcee2209804673c93f8fb0d5</Anchor>
    <Abstract>Creates an action that will move a node to the position of given node. </Abstract>
    <DeclaredIn>FiniteTimeActions.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__pad0__</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Actions::MoveToNode</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_move_to_node.html</Path>
    <Anchor>a06b6bd3520c14f202604fd04522b8466</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destinationNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Actions::MoveToNode</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_move_to_node.html</Path>
    <Anchor>a7fa2f2f2e855801fe367e14ffcea5456</Anchor>
    <Abstract>Node to be reached at the end of the animation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>originalPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Actions::MoveToNode</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_move_to_node.html</Path>
    <Anchor>a0e273a88426fea3f642fc5375e276b3a</Anchor>
    <Abstract>Original position of node to move. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::Actions::RemoveFromParent</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MK::Actions::RemoveFromParent</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_remove_from_parent.html</Path>
    <Abstract>RemoveFromParent action removes a node from its parent after certain delay. </Abstract>
    <DeclaredIn>FiniteTimeActions.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Actions::RemoveFromParent</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_remove_from_parent.html</Path>
    <Anchor>a565663b23b47b8f2eab2d7412a4b0a9e</Anchor>
    <DeclaredIn>FiniteTimeActions.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Actions::RemoveFromParent</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_remove_from_parent.html</Path>
    <Anchor>a20a04ac7b796056388cfc6589f2b9225</Anchor>
    <Abstract>Initializes the action with given duration. </Abstract>
    <DeclaredIn>FiniteTimeActions.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Actions::RemoveFromParent</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_remove_from_parent.html</Path>
    <Anchor>a94b5c09293fdd913208ee8ed5eb1afa7</Anchor>
    <DeclaredIn>FiniteTimeActions.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startWithTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Actions::RemoveFromParent</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_remove_from_parent.html</Path>
    <Anchor>a98ef86874e01ce6608c2e65746f60d98</Anchor>
    <DeclaredIn>FiniteTimeActions.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Actions::RemoveFromParent</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_remove_from_parent.html</Path>
    <Anchor>a6b20cd752045b8c7206337fd4e007b34</Anchor>
    <DeclaredIn>FiniteTimeActions.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RemoveFromParent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>MK::Actions::RemoveFromParent</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_remove_from_parent.html</Path>
    <Anchor>ac771eb6669858b8cb496bad44b687d72</Anchor>
    <DeclaredIn>FiniteTimeActions.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>MK::Actions::RemoveFromParent</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_remove_from_parent.html</Path>
    <Anchor>a9359e0e7ad0334829e786a2c939bb90e</Anchor>
    <Abstract>Creates an action that will remove a node from its parent after certain delay. </Abstract>
    <DeclaredIn>FiniteTimeActions.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__pad0__</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Actions::RemoveFromParent</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_remove_from_parent.html</Path>
    <Anchor>abdd9023efc92de8eaebc51fc4383e23c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::Actions::Shake</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MK::Actions::Shake</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_shake.html</Path>
    <Abstract>Shake action shakes a node during a certain delay. </Abstract>
    <DeclaredIn>FiniteTimeActions.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>MK::Actions::Shake</Scope>
    </TokenIdentifier>
    <Path>class_m_k_1_1_actions_1_1_shake.html</Path>
    <Anchor>a3f5139cc9672ce2f30346324bb174296</Anchor>
    <Abstract>Creates a shake action with given duration and strength (maximum movement allowed). </Abstract>
    <DeclaredIn>FiniteTimeActions.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::AdKit</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Abstract>AdKit namespace features methods to preload and display ads. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a39e1599ce157acc2dcbcd8747f870a2b</Anchor>
    <Abstract>Performs any initialization required by the ads adapter. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_sessionEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>ac31c3a4e613ecbb143197e9340b60e23</Anchor>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_sessionStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a85c78af5fe0edb129256ba748b40a42c</Anchor>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showBottomBanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a526610f0f5a5595280154895818c48de</Anchor>
    <Abstract>Shows a bottom banner ad. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showInterstitial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>ae4fe5a11d697083b53f50d9abcc3286e</Anchor>
    <Abstract>Shows an interstitial ad. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showTopBanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>acf80fb472cfaa9a3fee8b99789ee39a5</Anchor>
    <Abstract>Shows a top banner ad. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showVideoReward</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a89f8e4bc4d9c7d6b75f3d785ef1d3dab</Anchor>
    <Abstract>Shows a video reward ad. </Abstract>
    <DeclaredIn>_AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a1abd645a384f31dc1421e82772cfb472</Anchor>
    <Abstract>Returns whether ads are enabled for this user or not. </Abstract>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>aab6fed949fb7e7a9052144367597b9cd</Anchor>
    <Abstract>Performs any initialization required by the ads adapter. </Abstract>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Java_org_cocos2dx_cpp_AppActivity_callCppRewardCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a3ec27cc7d527c70185740892a183e8cb</Anchor>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showBottomBanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>add9f76341cdf101a96a3871fa154a2c9</Anchor>
    <Abstract>Shows a bottom banner ad. </Abstract>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showInterstitial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a413ead0cc048a5cb2becc3a6e50ad59b</Anchor>
    <Abstract>Shows an interstitial ad. </Abstract>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showTopBanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a339aea64224b42fd0db628bb1ee87b94</Anchor>
    <Abstract>Shows a top banner ad. </Abstract>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showVideoReward</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>acafca58cb7a9d2d72bb1990586e506af</Anchor>
    <Abstract>Shows video reward ad. </Abstract>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>videoRewardsAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a6bca88e69dd5dc1616d521b88eb953cc</Anchor>
    <Abstract>Returns whether this user has video rewards available or not. </Abstract>
    <DeclaredIn>AdKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rewardCallbacks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>abb6b3476585f740a5b10281a86dbe4f0</Anchor>
    <DeclaredIn>AdKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>StandardBanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a423f5c1e719d5c526cdb9effb3f14591a6a414c107bb1ca13a77f09bb4c065cd3</Anchor>
    <Abstract>300x50, phones and tablets. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LargeBanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a423f5c1e719d5c526cdb9effb3f14591a888b05dad2735d1b8ccf8fa8120d1478</Anchor>
    <Abstract>320x100, phones and tablets. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IABMediumRectangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a423f5c1e719d5c526cdb9effb3f14591a9935d235ebb0187250e7c6c7f62d08ff</Anchor>
    <Abstract>300x250, phones and tablets. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IABFullSizeBanner</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a423f5c1e719d5c526cdb9effb3f14591aa46b04ced77c12392e95930c960b9f08</Anchor>
    <Abstract>468x60, phones and tablets. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IABLeaderboard</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a423f5c1e719d5c526cdb9effb3f14591a838525d00e196caba8c986243eaec806</Anchor>
    <Abstract>728x60, phones and tablets. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SmartBannerPortrait</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a423f5c1e719d5c526cdb9effb3f14591a8394003cddafbe53a2c536c4d2e06995</Anchor>
    <Abstract>screen width x 32|50|90, phones and tablets. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SmartBannerLandscape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::AdKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_ad_kit.html</Path>
    <Anchor>a423f5c1e719d5c526cdb9effb3f14591a6115b71b49a964f8f17788fe460cccd0</Anchor>
    <Abstract>screen width x 32|50|90, phones and tablets. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::Analytics</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Abstract>Analytics namespace wraps Twitter&amp;#39;s Fabric and MixPanel methods in a set of cross-compatible function...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a215ed26bf5eec68b43c10f46736dcff5</Anchor>
    <Abstract>Logs given event without additional attributes. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a2a21dbb3d98cdbd82528b541a9444c2e</Anchor>
    <Abstract>Logs given event with given additional attributes. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>acfd87b7acb85358f701824dd2aa9ba2d</Anchor>
    <Abstract>Logs given event with given additional attributes. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logLevelEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a128674e7c2ff4904a91e3a7cac8c9a9a</Anchor>
    <Abstract>Logs end of level with given name/identifier, given score, whether user succeeded or not in the level...</Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logLevelEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>ab498d61caeb1d3ec088c3c42271dd69c</Anchor>
    <Abstract>Logs end of level with given name/identifier, given score, whether user succeeded or not in the level...</Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logLevelStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a9e78b00c2896743d7d7f4a574ec13856</Anchor>
    <Abstract>Logs start of level with given name/identifier and given optional additional attributes. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logLevelStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a09eed2973e784da332a1d0e6093d649b</Anchor>
    <Abstract>Logs start of level with given name/identifier and given optional additional attributes. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logPerformance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a15ed005a81c1e96f744584cb4f5e5e34</Anchor>
    <Abstract>Logs frames per second. </Abstract>
    <DeclaredIn>_Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a06ed59ccf83270d8c89455e41efde314</Anchor>
    <Abstract>Returns whether Analytics logging in enbled or not. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a7bb95c80f3280eb2e484571354d8c61e</Anchor>
    <Abstract>Logs given event without additional attributes. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a860c9b76af3732ddd17e2e68c4b0bb43</Anchor>
    <Abstract>Logs given event with given additional attributes. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logEvent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a01dcc6d3d88695b0c593c82078f09355</Anchor>
    <Abstract>Logs given event with given additional attributes. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logLevelEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a701bdc0ffe82d1bcbb40c11b6a651d38</Anchor>
    <Abstract>Logs end of level with given name/identifier, given score, whether user succeeded or not in the level...</Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logLevelEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a31de0f2fdb4caa11bb2dd1adaa0b3b8c</Anchor>
    <Abstract>Logs end of level with given name/identifier, given score, whether user succeeded or not in the level...</Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logLevelStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a6a424cbc8852272d96422d998a017239</Anchor>
    <Abstract>Logs start of level with given name/identifier. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logLevelStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a06ce55b9a1ccb5a444c5a2d029b3918d</Anchor>
    <Abstract>Logs start of level with given name/identifier and given optional additional attributes. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logLevelStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a6921e8ffe35f95820888d3cf7167874b</Anchor>
    <Abstract>Logs start of level with given name/identifier and given optional additional attributes. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logNonReadyVideoRewardDisplay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>a45074f520084ef7dadcf189155705026</Anchor>
    <Abstract>Logs that app tried to display a video reward ad that was not ready yet. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logPerformance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Analytics</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics.html</Path>
    <Anchor>aa0c87e56fcb10763beffc8829a49e8db</Anchor>
    <Abstract>Logs frames per second. </Abstract>
    <DeclaredIn>Analytics.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::Analytics::PerformanceIntensiveLogging</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK::Analytics::PerformanceIntensiveLogging</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics_1_1_performance_intensive_logging.html</Path>
    <Abstract>Fabric::PerformanceIntensiveLogging namespace features constants that allow enabling or disabling log...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CALLBACK_ID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Analytics::PerformanceIntensiveLogging</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics_1_1_performance_intensive_logging.html</Path>
    <Anchor>a59baa3c7ba76dceaaaaad3860c0b95cc</Anchor>
    <Abstract>Identifier of callback that logs FPS periodically. </Abstract>
    <DeclaredIn>Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PERIOD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Analytics::PerformanceIntensiveLogging</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics_1_1_performance_intensive_logging.html</Path>
    <Anchor>abc9bdf112aea01b11bfa6d172b478acf</Anchor>
    <Abstract>Period of intensive performance logging in seconds, that is, seconds to wait between two consecutive ...</Abstract>
    <DeclaredIn>Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PROBABILITY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Analytics::PerformanceIntensiveLogging</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_analytics_1_1_performance_intensive_logging.html</Path>
    <Anchor>abbacfcb270c18a0ba326edcf7e628052</Anchor>
    <Abstract>Probability (up to 1) of an invocation to Fabric::maybeScheduleIntensivePerformanceLogging to schedul...</Abstract>
    <DeclaredIn>Analytics.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::Android</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK::Android</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_android.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>APP_ACTIVITY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Android</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_android.html</Path>
    <Anchor>ad2711c1f63953648d9307f9431eeee64</Anchor>
    <DeclaredIn>Constants.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::CryptoKit</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK::CryptoKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_crypto_kit.html</Path>
    <Abstract>CryptoKit namespace offers methods to encrypt and descrypt data. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>symmetricDecrypt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::CryptoKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_crypto_kit.html</Path>
    <Anchor>a203d82d45948bf0ce0371afa7c3c8aa1</Anchor>
    <Abstract>Returns given encrypted content decrypted. </Abstract>
    <DeclaredIn>CryptoKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>symmetricEncrypt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::CryptoKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_crypto_kit.html</Path>
    <Anchor>a5558ed3cf6f0752f849ac7904209467b</Anchor>
    <Abstract>Returns given content encrypted. </Abstract>
    <DeclaredIn>CryptoKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::Device</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Abstract>Device namespace features method to get information about this device&amp;#39;s hardware. ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentPlatform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a7c83a89bef610abaa7ada09d38c2f3fb</Anchor>
    <Abstract>Returns current platform. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasPowerfulHardware</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a3df17973cee66e7dbaad474f93e2a544</Anchor>
    <Abstract>Returns whether this device has powerful hardware or not. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAndroid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a2ca977d6dbd8da9b026e083bbb99f60f</Anchor>
    <Abstract>Returns whether this device is running Android or not. </Abstract>
    <DeclaredIn>Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInternetAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a233e40252b58638d854b1c025d4679b5</Anchor>
    <Abstract>Returns whether internet is currently available or not. </Abstract>
    <DeclaredIn>Device.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isiOS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>ab96584a6fbd06cbfea91ac7f11722682</Anchor>
    <Abstract>Returns whether this device is running iOS or not. </Abstract>
    <DeclaredIn>Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOSX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a983d07fad256fb9e289b985cb4237efa</Anchor>
    <Abstract>Returns whether this device is running OS X or not. </Abstract>
    <DeclaredIn>Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingCellularData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>adea9816bb8ff16e566c3dcef21f91cbb</Anchor>
    <Abstract>Returns whether internet is currently reachable via cellular data or not. </Abstract>
    <DeclaredIn>Device.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingWifi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>ae25a42cc38e44dda3299a65171802375</Anchor>
    <Abstract>Returns whether internet is currently reachable via Wifi or not. </Abstract>
    <DeclaredIn>Device.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>language</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a7e658aa5071ef7e0ae034f1266061997</Anchor>
    <Abstract>Returns this device&amp;#39;s language code. </Abstract>
    <DeclaredIn>Device.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pxScreenSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a15ac13199dceddf6370f09acf2a192ad</Anchor>
    <Abstract>Retuns this device&amp;#39;s screen size, in pixel. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>screenSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a3afd74ae8409bd7e0267b5141e15197f</Anchor>
    <Abstract>Retuns this device&amp;#39;s screen size, in points. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UUID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a7f05d5d0e1b292c8fd29bdea674fcfe3</Anchor>
    <Abstract>Returns UUID of this device. </Abstract>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a05451548c58d28d4914a31207819ecda</Anchor>
    <DeclaredIn>_Device.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Android</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a0d8b71e85db2995772f195c7710ad5a5ae84e30b9390cdb64db6db2c9ab87846d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iOS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a0d8b71e85db2995772f195c7710ad5a5a1bdf605991920db11cbdf8508204c4eb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OSX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::Device</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_device.html</Path>
    <Anchor>a0d8b71e85db2995772f195c7710ad5a5a4893fb6eaf52350ba9ac82d34d329603</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::Facebook</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK::Facebook</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_facebook.html</Path>
    <Abstract>Facebook namespace features constants and methods used to interact with Facebook API. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Facebook</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_facebook.html</Path>
    <Anchor>a07fd01d1fa7c7902e1bc17718f2f669e</Anchor>
    <Abstract>Returns whether Facebook integration is enabled or not. </Abstract>
    <DeclaredIn>Facebook.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendInvitation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Facebook</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_facebook.html</Path>
    <Anchor>adf541520a341f9be2d806bc5cdf92a12</Anchor>
    <Abstract>Shows Facebook invite modal view controller with given link and thumbnail URL. </Abstract>
    <DeclaredIn>Facebook.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::Features</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK::Features</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_features.html</Path>
    <Abstract>Features namespace holds constants defining which features are enabled and disabled. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AdKit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Features</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_features.html</Path>
    <Anchor>a24e0be6525d51b648c6cad84900cfb29</Anchor>
    <Abstract>Whether Ads are enabled (true) or not. </Abstract>
    <DeclaredIn>Features.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Analytics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Features</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_features.html</Path>
    <Anchor>af9716bfabd384f08af7e204141c5ad14</Anchor>
    <Abstract>Whether Analytics is enabled (true) or not. </Abstract>
    <DeclaredIn>Features.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Facebook</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Features</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_features.html</Path>
    <Anchor>a0594c69baff814c1140fcceed7e55fdf</Anchor>
    <Abstract>Whether Facebook integration is enabled (true) or not. </Abstract>
    <DeclaredIn>Features.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GameKitAchievements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Features</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_features.html</Path>
    <Anchor>abc1e32d7ceefb956e224b1c919104087</Anchor>
    <Abstract>Whether GameKit&amp;#39;s achievements are enabled (true) or not. </Abstract>
    <DeclaredIn>Features.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GameKitLeaderboards</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Features</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_features.html</Path>
    <Anchor>a25dad15ca4f410b7da45716196111c4e</Anchor>
    <Abstract>Whether GameKit&amp;#39;s leaderboards are enabled (true) or not. </Abstract>
    <DeclaredIn>Features.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IAPKit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Features</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_features.html</Path>
    <Anchor>a7d2d7f81654c250d232afa72df4a45e3</Anchor>
    <Abstract>Whether in-app purchases are enabled (true) or not. </Abstract>
    <DeclaredIn>Features.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::GameKit</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Abstract>GameKit namespace offers a secure wrapper for achievements and leaderboards backed by Game Center on ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ac25ce294014ce6a0f51795797e2539a3</Anchor>
    <Abstract>Inits native components of Game Kit. </Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_reportAchievementProgress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a06ae068e5f9a83040b8d41ff3b29846a</Anchor>
    <Abstract>Reports given progress in achievement with given identifier, unlocking it if progress is ...</Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_requestAchievement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a39e7058c88be42770b272994ab24c8ef</Anchor>
    <Abstract>Requests player&amp;#39;s current progress on given achievement and calls given callback. ...</Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_requestFriendsScores</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a77147a74419d7b3ea3f2d4ab4b78a63b</Anchor>
    <Abstract>Requests current scores of current player&amp;#39;s friends in given leaderboard and calls given callback onc...</Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_requestScore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a8eb477843523f68c5c9f525bc90a7ccc</Anchor>
    <Abstract>Requests current score from given leaderboard and calls given callback once value is available...</Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_showLeaderboard</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ad96ba928b8aa5b88577155caf2ff798b</Anchor>
    <Abstract>Opens leaderboards UI for given leaderboard. </Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_signInPlayer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a5da107e47390d3e64f88e82d7d994d4e</Anchor>
    <Abstract>Signs in player in Game Center. </Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_submitScore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a8e6f98b471f4f8ed1edb0a3834a2af14</Anchor>
    <Abstract>Submits given score to given leaderboard. </Abstract>
    <DeclaredIn>_GameKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>exitGame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>acb91d71c0aaeea2b40e49ccca5473a65</Anchor>
    <Abstract>Closes the game. </Abstract>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ad8bb7cc5219105704e517efe7c4ebbf1</Anchor>
    <Abstract>Type of callbacks called after finishing an asynchronous request. </Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ad65cc8a24b47cbb094481c7d0e50d505</Anchor>
    <Abstract>On Android returns whether Google Play Games is available (true) or not. </Abstract>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Java_org_cocos2dx_cpp_AppActivity_callCppAchievementCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>aeea3e0c832dd9d93302d16f38b76c64e</Anchor>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Java_org_cocos2dx_cpp_AppActivity_callCppFriendScoreCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a148ebf1481b3aa5094f533f07b62395c</Anchor>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Java_org_cocos2dx_cpp_AppActivity_callCppScoreCallback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>abb3b0052dac094d7e492bb0cbb1a1e8b</Anchor>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reportAchievementProgress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>aee2952bf011186c68e66864476fdb8d5</Anchor>
    <Abstract>Reports achievement with given identifier and progress, unlocking it if progress is ...</Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestAchievement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a8d4665fd03e95f8f60b2d7a124a4ed50</Anchor>
    <Abstract>Requests player&amp;#39;s current progress on given achievement and calls given callback. ...</Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestFriendsScores</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a48ec5944178bf6e347b0d12fe09d848a</Anchor>
    <Abstract>Requests current scores of current player&amp;#39;s friends in given leaderboard and calls given callback onc...</Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestScore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>aff3a621501cd3f240e05f87eeaafcab3</Anchor>
    <Abstract>Requests current score from given leaderboard and calls given callback once value is available...</Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showAchievementsList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ac126d7aa77f9fe6062bba62b8b0ce583</Anchor>
    <Abstract>Shows achievements list screen. </Abstract>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showLeaderboard</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>aa5f34ea29b641200cab24dc8c4f7c88d</Anchor>
    <Abstract>Opens leaderboards UI for given leaderboard. </Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>submitScore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>ab1f27a99206f11007f883d6d0f6ac50f</Anchor>
    <Abstract>Submits given score to given leaderboard. </Abstract>
    <DeclaredIn>GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>achievementCallbacks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a92839d6799d1b9175b1b29f2c87e5d20</Anchor>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>achievements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>aaad725ab871bd20357566b4cf03ab743</Anchor>
    <Abstract>List of achievements. </Abstract>
    <DeclaredIn>GameKit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentLoginState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>aedace782bcf456dbd9881a26fbeee36b</Anchor>
    <Abstract>Current login state. </Abstract>
    <DeclaredIn>GameKit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>friendScoreCallbacks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a72cb836ffa8db4cd7757876d20232112</Anchor>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leaderboards</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a5c8017532e926f8819977dd8b590aed0</Anchor>
    <Abstract>List of leaderboards. </Abstract>
    <DeclaredIn>GameKit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scoreCallbacks</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a0f5d763fc204ebb60074a97b61105aa4</Anchor>
    <DeclaredIn>_GameKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Pending</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a99a41779688e737dcef3a1e0adcf6113a2d13df6f8b5e4c5af9f87e0dc39df69d</Anchor>
    <Abstract>User has not finished log in process yet. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LoggedIn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a99a41779688e737dcef3a1e0adcf6113afebcd1edf6010db4858e623d1dd2f3bc</Anchor>
    <Abstract>User has logged in. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NotLoggedIn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>MK::GameKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_game_kit.html</Path>
    <Anchor>a99a41779688e737dcef3a1e0adcf6113a68118f8d291e5a67d4d9c3408a083c69</Anchor>
    <Abstract>User has decided not to log in. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::IAPKit</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Abstract>IAPKit namespace features methods to handle in-app purchases. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_buyButtonTitleForProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a773f26204d8a695ed1c9c2221db6823c</Anchor>
    <Abstract>Returns title of buy button for product with given identifier. </Abstract>
    <DeclaredIn>_IAPKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_buyIfPossible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>ad4cf30908b63ff36cf48fb6b44c45007</Anchor>
    <Abstract>Tries to buy given item, calling callback on finished. </Abstract>
    <DeclaredIn>_IAPKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a41b7f768a3e8c9154647f7fe6e07028f</Anchor>
    <Abstract>Inits In-App Purchase system, calling given callback on end. </Abstract>
    <DeclaredIn>_IAPKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_restorePurchases</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a0e3cf8ba54a5272086984dd30d13a4ac</Anchor>
    <Abstract>Restores any previously purchased item, calling given callback on end. </Abstract>
    <DeclaredIn>_IAPKit.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buyButtonTitleForProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a1f52a6b60dd3e544ea0ef1d7a75625cb</Anchor>
    <Abstract>Returns title of buy button for product with given identifier. </Abstract>
    <DeclaredIn>IAPKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buyIfPossible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a244b106e812be9028b3c9c23f9f51752</Anchor>
    <Abstract>Tries to buy given item, calling callback on finished. </Abstract>
    <DeclaredIn>IAPKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>aaaf94652bf53567cfedcd0ef482858f8</Anchor>
    <Abstract>Returns whether IAPKit is enabled or not. </Abstract>
    <DeclaredIn>IAPKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>af53bbaf9538db755f6028fe26232cdd2</Anchor>
    <Abstract>Inits In-App Purchase system, calling given callback on end. </Abstract>
    <DeclaredIn>IAPKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>productGlobalIDForProductLocalID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>ab11c5800bf0812d1afe75bb65caf2817</Anchor>
    <Abstract>Returns string identifier (global ID) of given in-app purchase. </Abstract>
    <DeclaredIn>MKUtils.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>productLocalIDForProductGlobalID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a9d7e0aebe4a7c86838b52deb38aa3d9d</Anchor>
    <Abstract>Returns enum class item (local ID) of in-app purchase with given string identifier (global ID)...</Abstract>
    <DeclaredIn>MKUtils.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>productMetadataHasBeenRetrievedFromStore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a99962d8cc37e6db5b77b955653c661ce</Anchor>
    <Abstract>Returns whether given product has been found on store and can be bought or not. </Abstract>
    <DeclaredIn>IAPKit.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>restorePurchases</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>acd01af28d13abce09a6591b16733d419</Anchor>
    <Abstract>Restores any previously purchased item, calling given callback on end. </Abstract>
    <DeclaredIn>IAPKit.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unlockProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::IAPKit</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_i_a_p_kit.html</Path>
    <Anchor>a46680ce03df4993f7c6fa87861333de4</Anchor>
    <DeclaredIn>MKUtils.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::KVDatabase</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Abstract>KVDatabase namespace offers a key-value secure storage system stores content with a symmetric encrypt...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>decreaseLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>ad79c7c1255ddfb778041afba1f47e903</Anchor>
    <Abstract>Decreases long value for given key by given amount. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forcedWriteDisk</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a184cb17593fdfc77739423fded151e71</Anchor>
    <Abstract>Forces writing KVDatabase changes to disk. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a767b41659c2ee79a635285b4ae078aa7</Anchor>
    <Abstract>Returns long value associated with given key. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStringValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a10910fd1eab506db078b7a690eed3e50</Anchor>
    <Abstract>Returns string value associated with given key. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>ac2a23838089c49a655dc2c50b56bc470</Anchor>
    <Abstract>Return whether given key is in database or not. </Abstract>
    <DeclaredIn>KVDatabase.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>increaseLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>aa67a4972fe3adb6041b9da4cab53841f</Anchor>
    <Abstract>Increases long value for given key by given amount. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a6da2d946a5bd04c69d15b60834673712</Anchor>
    <Abstract>Initializes key-value database and calls given callback if this is the first time database has been i...</Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>keepMaxLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>aa3230cc40fb3f67eeebc7c388825ee81</Anchor>
    <Abstract>Keeps maximum long value between current long value and given value. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>keepMinLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>ae2bf5047196dcd947b56e680bbe53a1b</Anchor>
    <Abstract>Keeps minimum long value between current long value and given value. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLongValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a8c40584219ca43eb9a2e65f14e328816</Anchor>
    <Abstract>Sets long value for given key. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStringValueForKey</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a740bf14feb1b251255d768398eb53652</Anchor>
    <Abstract>Sets string value for given key. </Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeApplyingBinaryOperationAndReturningPreviousValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a4058098a441fb6e62605317242ebb54a</Anchor>
    <Abstract>Sets given key in database to the result of applying given binary operation to previous value (defaul...</Abstract>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storedKeys</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>a43f6653c44b92bc3a2e3968fc56caa30</Anchor>
    <DeclaredIn>KVDatabase.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>db</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::KVDatabase</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database.html</Path>
    <Anchor>ad41cf27a2953adf76090f41288cc3b95</Anchor>
    <DeclaredIn>KVDatabase.mm</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::KVDatabase::Default</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK::KVDatabase::Default</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database_1_1_default.html</Path>
    <Abstract>Default values returned by KVDatabase. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LONG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::KVDatabase::Default</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database_1_1_default.html</Path>
    <Anchor>afb2bbaa0b04f7a8aa760e2666dca3691</Anchor>
    <Abstract>Default value returned when long does not exist. </Abstract>
    <DeclaredIn>KVDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STRING</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::KVDatabase::Default</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database_1_1_default.html</Path>
    <Anchor>aa56f2c8e31c1d8b42bd50520a5329972</Anchor>
    <Abstract>Default value returned when string does not exist. </Abstract>
    <DeclaredIn>KVDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::KVDatabase::Key</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK::KVDatabase::Key</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database_1_1_key.html</Path>
    <Abstract>Well known KVDatabase keys. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ADS_DISABLED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::KVDatabase::Key</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_k_v_database_1_1_key.html</Path>
    <Anchor>a476d15ce81b1c419a47d273bda4d09a4</Anchor>
    <Abstract>Key used to store whether ads are disabled or not. </Abstract>
    <DeclaredIn>KVDatabase.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::Log</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK::Log</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log.html</Path>
    <Abstract>Log namespace offers methods to easily log warning, error, debug-only and information messages...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>critical</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Log</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log.html</Path>
    <Anchor>a71c5fa2bd12a3879b004f1e0eafa01e4</Anchor>
    <Abstract>Logs a critical message that will appear also in release builds and will also be logged to Fabric...</Abstract>
    <DeclaredIn>Log.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>debug</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Log</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log.html</Path>
    <Anchor>a3e84a309c158873fecff57e1db770c9a</Anchor>
    <Abstract>Logs a debug message that will not appear also in release builds. </Abstract>
    <DeclaredIn>Log.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nonCriticalCrash</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Log</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log.html</Path>
    <Anchor>aaad0a85a2c31c679940f009469a1cabc</Anchor>
    <Abstract>Logs a non critical message that will appear also in release builds and will also be logged to Fabric...</Abstract>
    <DeclaredIn>Log.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toFabric</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Log</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log.html</Path>
    <Anchor>a6d2108eb7cc881d7303292faba6cec84</Anchor>
    <Abstract>Logs message with given format and additional data to Fabric&amp;#39;s Crashlytics service. </Abstract>
    <DeclaredIn>_Log.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>warning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Log</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log.html</Path>
    <Anchor>a370b710e345cbc5eb6c2a4f27aeb504f</Anchor>
    <Abstract>Logs a warning message that will appear also in release builds. </Abstract>
    <DeclaredIn>Log.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::Log::ErrorMessageFormat</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK::Log::ErrorMessageFormat</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log_1_1_error_message_format.html</Path>
    <Abstract>Log::ErrorMessageFormat namespace wraps constants defining well-known errors. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>METHOD_NOT_AVAILABLE_ON_ANDROID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Log::ErrorMessageFormat</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log_1_1_error_message_format.html</Path>
    <Anchor>a95ea76ec91ce447a68f2f25ec490a044</Anchor>
    <Abstract>Message logged when a iOS/OS X only method is called on Android. </Abstract>
    <DeclaredIn>Log.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>METHOD_NOT_AVAILABLE_ON_OSX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>MK::Log::ErrorMessageFormat</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_log_1_1_error_message_format.html</Path>
    <Anchor>acf0b18c0fe4bf8f796478232959ec139</Anchor>
    <Abstract>Message logged when a method not available on OS X is called on OS X. </Abstract>
    <DeclaredIn>Log.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::Math</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK::Math</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_math.html</Path>
    <Abstract>Math namespace wraps common mathematical utilities. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clamp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Math</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_math.html</Path>
    <Anchor>a4b46a8d5a1a0647d02f24d8d7ca4738b</Anchor>
    <Abstract>Returns value clamped so it is bigger or equal to given minimum and lower or equal to given maximum...</Abstract>
    <DeclaredIn>Math.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MK::Random</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>MK::Random</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_random.html</Path>
    <Abstract>Random namespace features utilities to get random numbers. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Choose</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Random</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_random.html</Path>
    <Anchor>ad740002c0d1a5619cd9fd5d70072b48e</Anchor>
    <Abstract>Returns a random iterator between given start and end iterators, using given generator g to compute r...</Abstract>
    <DeclaredIn>Random.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Choose</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Random</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_random.html</Path>
    <Anchor>a4aa74a26805a007ae94e6b9a1dbf0454</Anchor>
    <Abstract>Returns a random iterator between given start and end iterators, using uniform probability. </Abstract>
    <DeclaredIn>Random.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Choose</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Random</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_random.html</Path>
    <Anchor>a08f89f40ac601a274bf6bd4ca93eae36</Anchor>
    <Abstract>Returns a random value in given vector. </Abstract>
    <DeclaredIn>Random.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FloatingPointNumberInRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Random</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_random.html</Path>
    <Anchor>ad4804d0b9d54e1632585daa62dcffd67</Anchor>
    <Abstract>Returns a floating point number in range . </Abstract>
    <DeclaredIn>Random.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IntegerNumberInRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Random</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_random.html</Path>
    <Anchor>a09e131693e09800cf64e901e4cf50af5</Anchor>
    <Abstract>Returns an integer number in closed range . </Abstract>
    <DeclaredIn>Random.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TakeChance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>MK::Random</Scope>
    </TokenIdentifier>
    <Path>namespace_m_k_1_1_random.html</Path>
    <Anchor>a241f791f42c63cb45ff07af74a4483ad</Anchor>
    <Abstract>Given a probability (floating point number between zero and one, both included) returns a random bool...</Abstract>
    <DeclaredIn>Random.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>std</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>std</Scope>
    </TokenIdentifier>
    <Path>namespacestd.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>round</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std</Scope>
    </TokenIdentifier>
    <Path>namespacestd.html</Path>
    <Anchor>a9d10306b742df34337582691a6f0c74f</Anchor>
    <DeclaredIn>CompilerEnhancements.hpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>to_string</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>std</Scope>
    </TokenIdentifier>
    <Path>namespacestd.html</Path>
    <Anchor>ad028a2646c9302d478995256bdbd9459</Anchor>
    <DeclaredIn>CompilerEnhancements.hpp</DeclaredIn>
  </Token>
</Tokens>
